{"version":3,"sources":["../../node_modules/hyperapp/src/index.js","../js/persist.js","../../node_modules/idb/build/esm/chunk.js","../../node_modules/idb/build/esm/index.js","../js/store.js","../js/show-dialog-async.js","../js/prompt-save-as.js","../src/lib/directive.ts","../src/lib/dom.ts","../src/lib/part.ts","../src/lib/template.ts","../src/lib/template-instance.ts","../src/lib/template-result.ts","../src/lib/parts.ts","../src/lib/default-template-processor.ts","../src/lib/template-factory.ts","../src/lib/render.ts","src/lit-html.ts","../src/lib/modify-template.ts","../src/lib/shady-render.ts","../src/lib/updating-element.ts","../src/lib/decorators.ts","../src/lib/css-tag.ts","src/lit-element.ts","../../node_modules/uuid/lib/rng-browser.js","../../node_modules/uuid/lib/bytesToUuid.js","../../node_modules/uuid/v4.js","../js/graph/util.js","../js/mime-editor.js","../js/mime-kampo.js","../js/realize.js","../js/command.js","../js/command-event.js","../js/wc-loader.js","../js/webcomponents/editor-lasso.js","../js/webcomponents/graph-editor.js","../js/webcomponents/graph-node-list.js","../js/webcomponents/graph-node.js","../js/webcomponents/graph-content-note.js","../js/webcomponents/graph-content-pattern.js","../js/webcomponents/graph-link-list.js","../js/webcomponents/graph-link.js","../js/webcomponents/graph-contextmenu-item.js","../js/webcomponents/graph-contextmenu.js","../js/hyperapp/menu/menu.js","../../node_modules/dialog-polyfill/dist/dialog-polyfill.esm.js","../js/hyperapp/dialogs/dialog.js","../js/hyperapp/dialogs/import-dialog.js","../js/hyperapp/dialogs/export-dialog.js","../js/hyperapp/dialogs/save-as-dialog.js","../js/hyperapp/dialogs/load-dialog.js","../js/app.js"],"names":["h","name","attributes","length","rest","children","arguments","push","node","pop","nodeName","key","app","state","actions","view","container","map","skipRender","rootElement","oldNode","recycleElement","element","toLowerCase","call","childNodes","nodeType","nodeValue","lifecycle","isRecycling","globalState","clone","wiredActions","wireStateToActions","path","action","data","result","getPartialState","then","scheduleRender","setPartialState","concat","resolveNode","render","patch","parent","isSvg","newElement","createElement","document","createTextNode","createElementNS","oncreate","i","appendChild","updateAttribute","insertBefore","removeElement","updateElement","oldAttributes","cb","onupdate","oldKeyed","newKeyed","oldElements","oldChildren","oldKey","getKey","k","newKey","keyedNode","setTimeout","target","source","out","value","slice","eventListener","event","currentTarget","events","type","oldValue","style","cssText","setProperty","addEventListener","removeEventListener","setAttribute","removeAttribute","done","removeChild","removeChildren","ondestroy","onremove","navigator","storage","persist","granted","console","log","alert","instanceOfAny","object","constructors","some","c","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","IDBDatabase","IDBObjectStore","IDBIndex","IDBCursor","IDBTransaction","getCursorAdvanceMethods","prototype","advance","continue","continuePrimaryKey","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","promisifyRequest","request","promise","Promise","resolve","reject","unlisten","success","error","wrap","set","catch","cacheDonePromiseForTransaction","tx","has","complete","idbProxyTraps","get","prop","receiver","objectStoreNames","undefined","objectStore","addTraps","callback","wrapFunction","func","transaction","includes","args","apply","unwrap","storeNames","sort","transformCachableValue","Proxy","IDBRequest","newValue","openDB","version","blocked","upgrade","blocking","indexedDB","open","openPromise","oldVersion","newVersion","db","deleteDB","deleteDatabase","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","replace","useIndex","isWrite","method","storeName","store","index","shift","returnVal","oldTraps","dbName","oldVer","newVer","_transaction","createObjectStore","keyPath","createIndex","unique","showDialogAsync","id","dialog","getElementById","executor","e","_e","Error","showModal","finally","submitf","cancelf","dialogResolvedEvent","CustomEvent","detail","dispatchEvent","promptSaveAs","title","posOnGraph","editor","relativeX","relativeY","x","zoom","center","y","relativePos","clientX","clientY","base","rect","getBoundingClientRect","width","height","realize","Object","getPrototypeOf","html","templateResult","template","forcePrototype","createDocumentFragment","descriptors","keys","reduce","acc","create","Command","constructor","up","down","upProc","downProc","CommandEvent","command","opts","defaultOpts","assign","option","bubbles","cancelable","composed","LOADER","parse","resources","init","EditorLasso","LitElement","Math","min","starty","endy","startx","endx","abs","styles","css","properties","Number","reflect","customElements","define","GraphEditor","centerX","centerY","draggedData","handleDragOver","handleDragEnd","handleDragStart","handleDrop","handleClick","handleContextMenu","clientPos","pos","dataTransfer","setData","MIME_EDITOR","JSON","stringify","ctrlKey","lasso","shadowRoot","querySelector","img","setDragImage","effectAllowed","from","preventDefault","types","dropEffect","mod","next","posx","posy","selected","elements","delta","forEach","originalPos","remove","MIME_KAMPO","getData","dropInEditor","kampoPayload","dropKampo","prev","createNodeMoveCommand","createMoveSelectedCommand","start","end","max","Array","filter","stateX","stateY","payload","pattern","item","fragment","nodeTemplate","appendNode","createAppendNodeCommand","firstElementChild","focus","body","append","find","slot","link","to","toPlainObj","nodes","links","serialize","GraphNodeList","observer","MutationObserver","mutations","removedNodes","parentElement","linkFrom","linkTo","connectedCallback","observe","childList","GraphNode","String","Boolean","closest","dragStartLink","dragStartMoveSelected","dragStartMove","stopPropagation","querySelectorAll","json","destroy","createDestroyCommand","linkLayer","content","GraphContentNote","finishContentEdit","pastePlainText","openContextMenu","contentElement","updated","innerText","createEditCommand","updateComplete","menu","text","clipboardData","selection","getSelection","window","anchorNode","rangeCount","deleteFromDocument","getRangeAt","insertNode","GraphContentPattern","openConetextMenu","patternData","__pattern","requestUpdate","GraphLinkList","fromId","toId","createLinkCommand","buildTemplates","GraphLink","strokeWidth","startPos","endPos","fromObs","makeObserver","toObs","markerWidth","firstUpdated","setPoints","observeById","attributeChangedCallback","attrName","_o","n","isConnected","obs","disconnect","changed","line","offsetLeft","offsetTop","edge","getIntersectedEdge","getEdges","getIntersectPoint","theta","atan2","modifier","cos","sin","applyLinePos","NodeMoveObserver","_mutations","attributeFilter","subtree","failCallback","edges","isIntersected","top","left","bottom","right","a","b","d","ta","tb","tc","offsetWidth","offsetHeight","vca","vab","vcd","ratio","GraphContextMenuItem","do","operation","GraphContextMenu","handleBlur","reflex","xOrReflexed","clientHeight","innerHeight","clientWidth","innerWidth","blur","span","limit","Menu","renderIf","menuPath","closeMenu","setMenuPath","saveData","getAll","load","file","reader","FileReader","onload","import","readAsText","save","setTitle","filename","export","undo","redo","SubMenu","displayName","depth","klass","setPath","classcat","MenuItem","menuAction","flatAll","join","flatMap","isArray","entries","_k","v","cond","otherwise","dialogPolyfill","supportCustomEvent","createsStackingContext","el","s","getComputedStyle","invalid","ok","opacity","position","webkitOverflowScrolling","findNearestDialog","localName","safeBlur","inNodeList","nodeList","isFormMethodDialog","hasAttribute","getAttribute","dialogPolyfillInfo","dialog_","replacedStyleTop_","openAsModal_","show","bind","close","returnValue","maybeHideModal","removed","timeout","downgradeModal","delayModel","ev","cand","substr","clearTimeout","defineProperty","setOpen","backdrop_","className","backdropClick_","createEvent","initCustomEvent","Event","contains","zIndex","parentNode","dm","removeDialog","fake","firstChild","tabIndex","redirectedEvent","initMouseEvent","screenX","screenY","altKey","shiftKey","metaKey","button","relatedTarget","focus_","query","activeElement","updateZIndex","dialogZ","backdropZ","pushDialog","warn","needsCentering","reposition","nextSibling","opt_returnValue","closeEvent","scrollTop","documentElement","topValue","styleSheets","styleSheet","cssRules","j","rule","selectedNodes","selectorText","cssTop","getPropertyValue","cssBottom","computedStyle","isInlinePositionSetByStylesheet","HTMLDialogElement","forceRegisterDialog","pendingDialogStack","checkDOM","checkDOM_","overlay","forwardTab_","handleKey_","handleFocus_","zIndexLow_","zIndexHigh_","mo_","records","rec","Element","DialogManager","blockDocument","unblockDocument","updateStacking","dpi","last","containedByTopDialog_","candidate","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","keyCode","cancelEvent","indexOf","allowed","unshift","splice","formSubmitter","useValue","testForm","methodDescriptor","getOwnPropertyDescriptor","HTMLFormElement","realGet","realSet","defaultPrevented","form","offsetX","offsetY","nativeFormSubmit","submit","replacementFormSubmit","dialogResolved","registerDialog","submitEvent","files","mapHelper","record","updatedAt","toLocaleString","array","f","addCommand","commands","redoStack","undoStack","download","href","URL","createObjectURL","Blob","click","_state","newEditor","replaceWith","setDb","task","put","Date","application"],"mappings":"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","file":"app.f983b93e.js","sourceRoot":"../src/html","sourcesContent":["export function h(name, attributes) {\n  var rest = []\n  var children = []\n  var length = arguments.length\n\n  while (length-- > 2) rest.push(arguments[length])\n\n  while (rest.length) {\n    var node = rest.pop()\n    if (node && node.pop) {\n      for (length = node.length; length--; ) {\n        rest.push(node[length])\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(node)\n    }\n  }\n\n  return typeof name === \"function\"\n    ? name(attributes || {}, children)\n    : {\n        nodeName: name,\n        attributes: attributes || {},\n        children: children,\n        key: attributes && attributes.key\n      }\n}\n\nexport function app(state, actions, view, container) {\n  var map = [].map\n  var rootElement = (container && container.children[0]) || null\n  var oldNode = rootElement && recycleElement(rootElement)\n  var lifecycle = []\n  var skipRender\n  var isRecycling = true\n  var globalState = clone(state)\n  var wiredActions = wireStateToActions([], globalState, clone(actions))\n\n  scheduleRender()\n\n  return wiredActions\n\n  function recycleElement(element) {\n    return {\n      nodeName: element.nodeName.toLowerCase(),\n      attributes: {},\n      children: map.call(element.childNodes, function(element) {\n        return element.nodeType === 3 // Node.TEXT_NODE\n          ? element.nodeValue\n          : recycleElement(element)\n      })\n    }\n  }\n\n  function resolveNode(node) {\n    return typeof node === \"function\"\n      ? resolveNode(node(globalState, wiredActions))\n      : node != null\n        ? node\n        : \"\"\n  }\n\n  function render() {\n    skipRender = !skipRender\n\n    var node = resolveNode(view)\n\n    if (container && !skipRender) {\n      rootElement = patch(container, rootElement, oldNode, (oldNode = node))\n    }\n\n    isRecycling = false\n\n    while (lifecycle.length) lifecycle.pop()()\n  }\n\n  function scheduleRender() {\n    if (!skipRender) {\n      skipRender = true\n      setTimeout(render)\n    }\n  }\n\n  function clone(target, source) {\n    var out = {}\n\n    for (var i in target) out[i] = target[i]\n    for (var i in source) out[i] = source[i]\n\n    return out\n  }\n\n  function setPartialState(path, value, source) {\n    var target = {}\n    if (path.length) {\n      target[path[0]] =\n        path.length > 1\n          ? setPartialState(path.slice(1), value, source[path[0]])\n          : value\n      return clone(source, target)\n    }\n    return value\n  }\n\n  function getPartialState(path, source) {\n    var i = 0\n    while (i < path.length) {\n      source = source[path[i++]]\n    }\n    return source\n  }\n\n  function wireStateToActions(path, state, actions) {\n    for (var key in actions) {\n      typeof actions[key] === \"function\"\n        ? (function(key, action) {\n            actions[key] = function(data) {\n              var result = action(data)\n\n              if (typeof result === \"function\") {\n                result = result(getPartialState(path, globalState), actions)\n              }\n\n              if (\n                result &&\n                result !== (state = getPartialState(path, globalState)) &&\n                !result.then // !isPromise\n              ) {\n                scheduleRender(\n                  (globalState = setPartialState(\n                    path,\n                    clone(state, result),\n                    globalState\n                  ))\n                )\n              }\n\n              return result\n            }\n          })(key, actions[key])\n        : wireStateToActions(\n            path.concat(key),\n            (state[key] = clone(state[key])),\n            (actions[key] = clone(actions[key]))\n          )\n    }\n\n    return actions\n  }\n\n  function getKey(node) {\n    return node ? node.key : null\n  }\n\n  function eventListener(event) {\n    return event.currentTarget.events[event.type](event)\n  }\n\n  function updateAttribute(element, name, value, oldValue, isSvg) {\n    if (name === \"key\") {\n    } else if (name === \"style\") {\n      if (typeof value === \"string\") {\n        element.style.cssText = value\n      } else {\n        if (typeof oldValue === \"string\") oldValue = element.style.cssText = \"\"\n        for (var i in clone(oldValue, value)) {\n          var style = value == null || value[i] == null ? \"\" : value[i]\n          if (i[0] === \"-\") {\n            element.style.setProperty(i, style)\n          } else {\n            element.style[i] = style\n          }\n        }\n      }\n    } else {\n      if (name[0] === \"o\" && name[1] === \"n\") {\n        name = name.slice(2)\n\n        if (element.events) {\n          if (!oldValue) oldValue = element.events[name]\n        } else {\n          element.events = {}\n        }\n\n        element.events[name] = value\n\n        if (value) {\n          if (!oldValue) {\n            element.addEventListener(name, eventListener)\n          }\n        } else {\n          element.removeEventListener(name, eventListener)\n        }\n      } else if (\n        name in element &&\n        name !== \"list\" &&\n        name !== \"type\" &&\n        name !== \"draggable\" &&\n        name !== \"spellcheck\" &&\n        name !== \"translate\" &&\n        !isSvg\n      ) {\n        element[name] = value == null ? \"\" : value\n      } else if (value != null && value !== false) {\n        element.setAttribute(name, value)\n      }\n\n      if (value == null || value === false) {\n        element.removeAttribute(name)\n      }\n    }\n  }\n\n  function createElement(node, isSvg) {\n    var element =\n      typeof node === \"string\" || typeof node === \"number\"\n        ? document.createTextNode(node)\n        : (isSvg = isSvg || node.nodeName === \"svg\")\n          ? document.createElementNS(\n              \"http://www.w3.org/2000/svg\",\n              node.nodeName\n            )\n          : document.createElement(node.nodeName)\n\n    var attributes = node.attributes\n    if (attributes) {\n      if (attributes.oncreate) {\n        lifecycle.push(function() {\n          attributes.oncreate(element)\n        })\n      }\n\n      for (var i = 0; i < node.children.length; i++) {\n        element.appendChild(\n          createElement(\n            (node.children[i] = resolveNode(node.children[i])),\n            isSvg\n          )\n        )\n      }\n\n      for (var name in attributes) {\n        updateAttribute(element, name, attributes[name], null, isSvg)\n      }\n    }\n\n    return element\n  }\n\n  function updateElement(element, oldAttributes, attributes, isSvg) {\n    for (var name in clone(oldAttributes, attributes)) {\n      if (\n        attributes[name] !==\n        (name === \"value\" || name === \"checked\"\n          ? element[name]\n          : oldAttributes[name])\n      ) {\n        updateAttribute(\n          element,\n          name,\n          attributes[name],\n          oldAttributes[name],\n          isSvg\n        )\n      }\n    }\n\n    var cb = isRecycling ? attributes.oncreate : attributes.onupdate\n    if (cb) {\n      lifecycle.push(function() {\n        cb(element, oldAttributes)\n      })\n    }\n  }\n\n  function removeChildren(element, node) {\n    var attributes = node.attributes\n    if (attributes) {\n      for (var i = 0; i < node.children.length; i++) {\n        removeChildren(element.childNodes[i], node.children[i])\n      }\n\n      if (attributes.ondestroy) {\n        attributes.ondestroy(element)\n      }\n    }\n    return element\n  }\n\n  function removeElement(parent, element, node) {\n    function done() {\n      parent.removeChild(removeChildren(element, node))\n    }\n\n    var cb = node.attributes && node.attributes.onremove\n    if (cb) {\n      cb(element, done)\n    } else {\n      done()\n    }\n  }\n\n  function patch(parent, element, oldNode, node, isSvg) {\n    if (node === oldNode) {\n    } else if (oldNode == null || oldNode.nodeName !== node.nodeName) {\n      var newElement = createElement(node, isSvg)\n      parent.insertBefore(newElement, element)\n\n      if (oldNode != null) {\n        removeElement(parent, element, oldNode)\n      }\n\n      element = newElement\n    } else if (oldNode.nodeName == null) {\n      element.nodeValue = node\n    } else {\n      updateElement(\n        element,\n        oldNode.attributes,\n        node.attributes,\n        (isSvg = isSvg || node.nodeName === \"svg\")\n      )\n\n      var oldKeyed = {}\n      var newKeyed = {}\n      var oldElements = []\n      var oldChildren = oldNode.children\n      var children = node.children\n\n      for (var i = 0; i < oldChildren.length; i++) {\n        oldElements[i] = element.childNodes[i]\n\n        var oldKey = getKey(oldChildren[i])\n        if (oldKey != null) {\n          oldKeyed[oldKey] = [oldElements[i], oldChildren[i]]\n        }\n      }\n\n      var i = 0\n      var k = 0\n\n      while (k < children.length) {\n        var oldKey = getKey(oldChildren[i])\n        var newKey = getKey((children[k] = resolveNode(children[k])))\n\n        if (newKeyed[oldKey]) {\n          i++\n          continue\n        }\n\n        if (newKey != null && newKey === getKey(oldChildren[i + 1])) {\n          if (oldKey == null) {\n            removeElement(element, oldElements[i], oldChildren[i])\n          }\n          i++\n          continue\n        }\n\n        if (newKey == null || isRecycling) {\n          if (oldKey == null) {\n            patch(element, oldElements[i], oldChildren[i], children[k], isSvg)\n            k++\n          }\n          i++\n        } else {\n          var keyedNode = oldKeyed[newKey] || []\n\n          if (oldKey === newKey) {\n            patch(element, keyedNode[0], keyedNode[1], children[k], isSvg)\n            i++\n          } else if (keyedNode[0]) {\n            patch(\n              element,\n              element.insertBefore(keyedNode[0], oldElements[i]),\n              keyedNode[1],\n              children[k],\n              isSvg\n            )\n          } else {\n            patch(element, oldElements[i], null, children[k], isSvg)\n          }\n\n          newKeyed[newKey] = children[k]\n          k++\n        }\n      }\n\n      while (i < oldChildren.length) {\n        if (getKey(oldChildren[i]) == null) {\n          removeElement(element, oldElements[i], oldChildren[i])\n        }\n        i++\n      }\n\n      for (var i in oldKeyed) {\n        if (!newKeyed[i]) {\n          removeElement(element, oldKeyed[i][0], oldKeyed[i][1])\n        }\n      }\n    }\n    return element\n  }\n}\n","navigator.storage.persist(granted => {\r\n  if (granted) {\r\n    console.log(\"the storage are persisted\")\r\n  } else {\r\n    alert(\r\n      \"Save-data will be removed when few storage are remaining. Please export your important data.\"\r\n    )\r\n  }\r\n})\r\n","const instanceOfAny = (object, constructors) => constructors.some(c => object instanceof c);\n\nlet idbProxyableTypes;\r\nlet cursorAdvanceMethods;\r\n// This is a function to prevent it throwing up in node environments.\r\nfunction getIdbProxyableTypes() {\r\n    return (idbProxyableTypes ||\r\n        (idbProxyableTypes = [\r\n            IDBDatabase,\r\n            IDBObjectStore,\r\n            IDBIndex,\r\n            IDBCursor,\r\n            IDBTransaction,\r\n        ]));\r\n}\r\n// This is a function to prevent it throwing up in node environments.\r\nfunction getCursorAdvanceMethods() {\r\n    return (cursorAdvanceMethods ||\r\n        (cursorAdvanceMethods = [\r\n            IDBCursor.prototype.advance,\r\n            IDBCursor.prototype.continue,\r\n            IDBCursor.prototype.continuePrimaryKey,\r\n        ]));\r\n}\r\nconst cursorRequestMap = new WeakMap();\r\nconst transactionDoneMap = new WeakMap();\r\nconst transactionStoreNamesMap = new WeakMap();\r\nconst transformCache = new WeakMap();\r\nconst reverseTransformCache = new WeakMap();\r\nfunction promisifyRequest(request) {\r\n    const promise = new Promise((resolve, reject) => {\r\n        const unlisten = () => {\r\n            request.removeEventListener('success', success);\r\n            request.removeEventListener('error', error);\r\n        };\r\n        const success = () => {\r\n            resolve(wrap(request.result));\r\n            unlisten();\r\n        };\r\n        const error = () => {\r\n            reject(request.error);\r\n            unlisten();\r\n        };\r\n        request.addEventListener('success', success);\r\n        request.addEventListener('error', error);\r\n    });\r\n    promise\r\n        .then(value => {\r\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\r\n        // (see wrapFunction).\r\n        if (value instanceof IDBCursor) {\r\n            cursorRequestMap.set(value, request);\r\n        }\r\n        // Catching to avoid \"Uncaught Promise exceptions\"\r\n    })\r\n        .catch(() => { });\r\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\r\n    // is because we create many promises from a single IDBRequest.\r\n    reverseTransformCache.set(promise, request);\r\n    return promise;\r\n}\r\nfunction cacheDonePromiseForTransaction(tx) {\r\n    // Early bail if we've already created a done promise for this transaction.\r\n    if (transactionDoneMap.has(tx))\r\n        return;\r\n    const done = new Promise((resolve, reject) => {\r\n        const unlisten = () => {\r\n            tx.removeEventListener('complete', complete);\r\n            tx.removeEventListener('error', error);\r\n            tx.removeEventListener('abort', error);\r\n        };\r\n        const complete = () => {\r\n            resolve();\r\n            unlisten();\r\n        };\r\n        const error = () => {\r\n            reject(tx.error);\r\n            unlisten();\r\n        };\r\n        tx.addEventListener('complete', complete);\r\n        tx.addEventListener('error', error);\r\n        tx.addEventListener('abort', error);\r\n    });\r\n    // Cache it for later retrieval.\r\n    transactionDoneMap.set(tx, done);\r\n}\r\nlet idbProxyTraps = {\r\n    get(target, prop, receiver) {\r\n        if (target instanceof IDBTransaction) {\r\n            // Special handling for transaction.done.\r\n            if (prop === 'done')\r\n                return transactionDoneMap.get(target);\r\n            // Polyfill for objectStoreNames because of Edge.\r\n            if (prop === 'objectStoreNames') {\r\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\r\n            }\r\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\r\n            if (prop === 'store') {\r\n                return receiver.objectStoreNames[1]\r\n                    ? undefined\r\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\r\n            }\r\n        }\r\n        // Else transform whatever we get back.\r\n        return wrap(target[prop]);\r\n    },\r\n    has(target, prop) {\r\n        if (target instanceof IDBTransaction &&\r\n            (prop === 'done' || prop === 'store')) {\r\n            return true;\r\n        }\r\n        return prop in target;\r\n    },\r\n};\r\nfunction addTraps(callback) {\r\n    idbProxyTraps = callback(idbProxyTraps);\r\n}\r\nfunction wrapFunction(func) {\r\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\r\n    // only create one new func per func.\r\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\r\n    if (func === IDBDatabase.prototype.transaction &&\r\n        !('objectStoreNames' in IDBTransaction.prototype)) {\r\n        return function (storeNames, ...args) {\r\n            const tx = func.call(unwrap(this), storeNames, ...args);\r\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\r\n            return wrap(tx);\r\n        };\r\n    }\r\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\r\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\r\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\r\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\r\n    // undefined if the end of the cursor has been reached.\r\n    if (getCursorAdvanceMethods().includes(func)) {\r\n        return function (...args) {\r\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\r\n            // the original object.\r\n            func.apply(unwrap(this), args);\r\n            return wrap(cursorRequestMap.get(this));\r\n        };\r\n    }\r\n    return function (...args) {\r\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\r\n        // the original object.\r\n        return wrap(func.apply(unwrap(this), args));\r\n    };\r\n}\r\nfunction transformCachableValue(value) {\r\n    if (typeof value === 'function')\r\n        return wrapFunction(value);\r\n    // This doesn't return, it just creates a 'done' promise for the transaction,\r\n    // which is later returned for transaction.done (see idbObjectHandler).\r\n    if (value instanceof IDBTransaction)\r\n        cacheDonePromiseForTransaction(value);\r\n    if (instanceOfAny(value, getIdbProxyableTypes()))\r\n        return new Proxy(value, idbProxyTraps);\r\n    // Return the same value back if we're not going to transform it.\r\n    return value;\r\n}\r\nfunction wrap(value) {\r\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\r\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\r\n    if (value instanceof IDBRequest)\r\n        return promisifyRequest(value);\r\n    // If we've already transformed this value before, reuse the transformed value.\r\n    // This is faster, but it also provides object equality.\r\n    if (transformCache.has(value))\r\n        return transformCache.get(value);\r\n    const newValue = transformCachableValue(value);\r\n    // Not all types are transformed.\r\n    // These may be primitive types, so they can't be WeakMap keys.\r\n    if (newValue !== value) {\r\n        transformCache.set(value, newValue);\r\n        reverseTransformCache.set(newValue, value);\r\n    }\r\n    return newValue;\r\n}\r\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { wrap as a, addTraps as b, instanceOfAny as c, reverseTransformCache as d, unwrap as e };\n","import { a as wrap, b as addTraps } from './chunk.js';\nexport { e as unwrap, a as wrap } from './chunk.js';\n\n/**\r\n * Open a database.\r\n *\r\n * @param name Name of the database.\r\n * @param version Schema version.\r\n * @param callbacks Additional callbacks.\r\n */\r\nfunction openDB(name, version, { blocked, upgrade, blocking } = {}) {\r\n    const request = indexedDB.open(name, version);\r\n    const openPromise = wrap(request);\r\n    if (upgrade) {\r\n        request.addEventListener('upgradeneeded', event => {\r\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\r\n        });\r\n    }\r\n    if (blocked)\r\n        request.addEventListener('blocked', () => blocked());\r\n    if (blocking) {\r\n        openPromise.then(db => db.addEventListener('versionchange', blocking)).catch(() => { });\r\n    }\r\n    return openPromise;\r\n}\r\n/**\r\n * Delete a database.\r\n *\r\n * @param name Name of the database.\r\n */\r\nfunction deleteDB(name, { blocked } = {}) {\r\n    const request = indexedDB.deleteDatabase(name);\r\n    if (blocked)\r\n        request.addEventListener('blocked', () => blocked());\r\n    return wrap(request).then(() => undefined);\r\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\r\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\r\nconst cachedMethods = new Map();\r\nfunction getMethod(target, prop) {\r\n    if (!(target instanceof IDBDatabase &&\r\n        !(prop in target) &&\r\n        typeof prop === 'string')) {\r\n        return;\r\n    }\r\n    if (cachedMethods.get(prop))\r\n        return cachedMethods.get(prop);\r\n    const targetFuncName = prop.replace(/FromIndex$/, '');\r\n    const useIndex = prop !== targetFuncName;\r\n    const isWrite = writeMethods.includes(targetFuncName);\r\n    if (\r\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\r\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\r\n        !(isWrite || readMethods.includes(targetFuncName))) {\r\n        return;\r\n    }\r\n    const method = async function (storeName, ...args) {\r\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\r\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\r\n        let target = tx.store;\r\n        if (useIndex)\r\n            target = target.index(args.shift());\r\n        const returnVal = target[targetFuncName](...args);\r\n        if (isWrite)\r\n            await tx.done;\r\n        return returnVal;\r\n    };\r\n    cachedMethods.set(prop, method);\r\n    return method;\r\n}\r\naddTraps(oldTraps => ({\r\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\r\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\r\n}));\n\nexport { openDB, deleteDB };\n","import { openDB, deleteDB } from \"idb\"\r\n\r\nconst dbName = \"DiagramEditorData\"\r\nconst version = 1\r\n\r\nfunction upgrade(db, oldVer, newVer, _transaction) {\r\n  // schema\r\n  // | title: String | data: Objecgt | createdAt: Date | updatedAt: Date |\r\n  console.log(`update running ${oldVer} to ${newVer}`)\r\n  const saveData = db.createObjectStore(\"saveData\", { keyPath: \"title\" })\r\n  saveData.createIndex(\"updatedAt\", \"updatedAt\", { unique: false })\r\n}\r\n\r\nexport async function open() {\r\n  console.log(\"currently, the DB is reseted per reload\")\r\n  await deleteDB(dbName)\r\n  const db = await openDB(dbName, version, { upgrade })\r\n  return db\r\n}\r\n","export default async function showDialogAsync(id) {\r\n  const dialog = document.getElementById(id)\r\n  let submitf, cancelf\r\n\r\n  const result = await new Promise((resolve, reject) => {\r\n    dialog.executor = { resolve, reject }\r\n\r\n    let submitf = e => resolve(e)\r\n    let cancelf = _e => {\r\n      const error = new Error(`dialog '${id}' canceled`)\r\n      error.name = \"DialogCancelError\"\r\n      reject(error)\r\n    }\r\n\r\n    dialog.addEventListener(\"submit\", submitf)\r\n    dialog.addEventListener(\"cancel\", cancelf)\r\n\r\n    dialog.showModal()\r\n  }).finally(() => {\r\n    dialog.removeEventListener(\"submit\", submitf)\r\n    dialog.removeEventListener(\"cancel\", cancelf)\r\n  })\r\n\r\n  return await new Promise((resolve, reject) => {\r\n    const dialogResolvedEvent = new CustomEvent(\"dialogresolved\", {\r\n      detail: { executor: { resolve, reject }, result },\r\n    })\r\n\r\n    dialog.dispatchEvent(dialogResolvedEvent)\r\n  })\r\n}\r\n","import showDialogAsync from \"./show-dialog-async.js\"\r\n\r\nexport default async function promptSaveAs() {\r\n  const { title } = await showDialogAsync(\"save-as-dialog\")\r\n  return title\r\n}\r\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// tslint:disable-next-line:no-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node',\n  index: number\n}|{readonly type: 'attribute', index: number, readonly name: string, readonly strings: ReadonlyArray<string>};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: ReadonlyArray<unknown>) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\nconst commentMarker = ` ${marker} `;\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: ReadonlyArray<unknown>;\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: ReadonlyArray<unknown>,\n      type: string, processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment poisition.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceeding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceeding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? commentMarker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    template.innerHTML = this.getHTML();\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|Symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // tslint:disable-next-line:no-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = this.parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    // If `value` isn't already a string, we explicitly convert it here in case\n    // it can't be implicitly converted - i.e. it's a symbol.\n    const valueAsString: string =\n        typeof value === 'string' ? value : String(value);\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = valueAsString;\n    } else {\n      this.__commitNode(document.createTextNode(valueAsString));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // tslint:disable-next-line:no-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\ntry {\n  const options = {\n    get capture() {\n      eventOptionsSupported = true;\n      return false;\n    }\n  };\n  // tslint:disable-next-line:no-any\n  window.addEventListener('test', options as any, options);\n  // tslint:disable-next-line:no-any\n  window.removeEventListener('test', options as any, options);\n} catch (_e) {\n}\n\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behaviour, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport type templateCache = {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>; //\n  readonly keyString: Map<string, Template>;\n};\n\nexport const templateCaches = new Map<string, templateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.0.0');\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module shady-render\n */\n\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(\n    template: Template, nodesToRemove: Set<Node>) {\n  const {element: {content}, parts} = template;\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let part = parts[partIndex];\n  let nodeIndex = -1;\n  let removeCount = 0;\n  const nodesToRemoveInTemplate = [];\n  let currentRemovingNode: Node|null = null;\n  while (walker.nextNode()) {\n    nodeIndex++;\n    const node = walker.currentNode as Element;\n    // End removal if stepped past the removing node\n    if (node.previousSibling === currentRemovingNode) {\n      currentRemovingNode = null;\n    }\n    // A node to remove was found in the template\n    if (nodesToRemove.has(node)) {\n      nodesToRemoveInTemplate.push(node);\n      // Track node we're removing\n      if (currentRemovingNode === null) {\n        currentRemovingNode = node;\n      }\n    }\n    // When removing, increment count by which to adjust subsequent part indices\n    if (currentRemovingNode !== null) {\n      removeCount++;\n    }\n    while (part !== undefined && part.index === nodeIndex) {\n      // If part is in a removed node deactivate it by setting index to -1 or\n      // adjust the index as needed.\n      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n      // go to the next active part.\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n      part = parts[partIndex];\n    }\n  }\n  nodesToRemoveInTemplate.forEach((n) => n.parentNode!.removeChild(n));\n}\n\nconst countNodes = (node: Node) => {\n  let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n  const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n  while (walker.nextNode()) {\n    count++;\n  }\n  return count;\n};\n\nconst nextActiveIndexInTemplateParts =\n    (parts: TemplatePart[], startIndex: number = -1) => {\n      for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n          return i;\n        }\n      }\n      return -1;\n    };\n\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(\n    template: Template, node: Node, refNode: Node|null = null) {\n  const {element: {content}, parts} = template;\n  // If there's no refNode, then put node at end of template.\n  // No part indices need to be shifted in this case.\n  if (refNode === null || refNode === undefined) {\n    content.appendChild(node);\n    return;\n  }\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let insertCount = 0;\n  let walkerIndex = -1;\n  while (walker.nextNode()) {\n    walkerIndex++;\n    const walkerNode = walker.currentNode as Element;\n    if (walkerNode === refNode) {\n      insertCount = countNodes(node);\n      refNode.parentNode!.insertBefore(node, refNode);\n    }\n    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n      // If we've inserted the node, simply adjust all subsequent parts\n      if (insertCount > 0) {\n        while (partIndex !== -1) {\n          parts[partIndex].index += insertCount;\n          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n        return;\n      }\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {removeNodes} from './dom.js';\nimport {insertNodeIntoTemplate, removeNodesFromTemplate} from './modify-template.js';\nimport {RenderOptions} from './render-options.js';\nimport {parts, render as litRender} from './render.js';\nimport {templateCaches} from './template-factory.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\nexport {html, svg, TemplateResult} from '../lit-html.js';\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type: string, scopeName: string) =>\n    `${type}--${scopeName}`;\n\nlet compatibleShadyCSSVersion = true;\n\nif (typeof window.ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n  console.warn(\n      `Incompatible ShadyCSS version detected. ` +\n      `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n      `@webcomponents/shadycss@1.3.1.`);\n  compatibleShadyCSSVersion = false;\n}\n\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName: string) =>\n    (result: TemplateResult) => {\n      const cacheKey = getTemplateCacheKey(result.type, scopeName);\n      let templateCache = templateCaches.get(cacheKey);\n      if (templateCache === undefined) {\n        templateCache = {\n          stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n          keyString: new Map<string, Template>()\n        };\n        templateCaches.set(cacheKey, templateCache);\n      }\n\n      let template = templateCache.stringsArray.get(result.strings);\n      if (template !== undefined) {\n        return template;\n      }\n\n      const key = result.strings.join(marker);\n      template = templateCache.keyString.get(key);\n      if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n          window.ShadyCSS!.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n      }\n      templateCache.stringsArray.set(result.strings, template);\n      return template;\n    };\n\nconst TEMPLATE_TYPES = ['html', 'svg'];\n\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName: string) => {\n  TEMPLATE_TYPES.forEach((type) => {\n    const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n    if (templates !== undefined) {\n      templates.keyString.forEach((template) => {\n        const {element: {content}} = template;\n        // IE 11 doesn't support the iterable param Set constructor\n        const styles = new Set<Element>();\n        Array.from(content.querySelectorAll('style')).forEach((s: Element) => {\n          styles.add(s);\n        });\n        removeNodesFromTemplate(template, styles);\n      });\n    }\n  });\n};\n\nconst shadyRenderSet = new Set<string>();\n\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles =\n    (scopeName: string, renderedDOM: DocumentFragment, template?: Template) => {\n      shadyRenderSet.add(scopeName);\n      // If `renderedDOM` is stamped from a Template, then we need to edit that\n      // Template's underlying template element. Otherwise, we create one here\n      // to give to ShadyCSS, which still requires one while scoping.\n      const templateElement =\n          !!template ? template.element : document.createElement('template');\n      // Move styles out of rendered DOM and store.\n      const styles = renderedDOM.querySelectorAll('style');\n      const {length} = styles;\n      // If there are no styles, skip unnecessary work\n      if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n        return;\n      }\n      const condensedStyle = document.createElement('style');\n      // Collect styles into a single style. This helps us make sure ShadyCSS\n      // manipulations will not prevent us from being able to fix up template\n      // part indices.\n      // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n      // currently does this anyway. When it does not, this should be changed.\n      for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode!.removeChild(style);\n        condensedStyle.textContent! += style.textContent;\n      }\n      // Remove styles from nested templates in this scope.\n      removeStylesFromLitTemplates(scopeName);\n      // And then put the condensed style into the \"root\" template passed in as\n      // `template`.\n      const content = templateElement.content;\n      if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n      } else {\n        content.insertBefore(condensedStyle, content.firstChild);\n      }\n      // Note, it's important that ShadyCSS gets the template that `lit-html`\n      // will actually render so that it can update the style inside when\n      // needed (e.g. @apply native Shadow DOM case).\n      window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n      const style = content.querySelector('style');\n      if (window.ShadyCSS!.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n      } else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set<Node>();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n      }\n    };\n\nexport interface ShadyRenderOptions extends Partial<RenderOptions> {\n  scopeName: string;\n}\n\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment|ShadowRoot,\n     options: ShadyRenderOptions) => {\n      if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n      }\n      const scopeName = options.scopeName;\n      const hasRendered = parts.has(container);\n      const needsScoping = compatibleShadyCSSVersion &&\n          container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n          !!(container as ShadowRoot).host;\n      // Handle first render to a scope specially...\n      const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n      // On first scope render, render into a fragment; this cannot be a single\n      // fragment that is reused since nested renders can occur synchronously.\n      const renderContainer =\n          firstScopeRender ? document.createDocumentFragment() : container;\n      litRender(\n          result,\n          renderContainer,\n          {templateFactory: shadyTemplateFactory(scopeName), ...options} as\n              RenderOptions);\n      // When performing first scope render,\n      // (1) We've rendered into a fragment so that there's a chance to\n      // `prepareTemplateStyles` before sub-elements hit the DOM\n      // (which might cause them to render based on a common pattern of\n      // rendering in a custom element's `connectedCallback`);\n      // (2) Scope the template with ShadyCSS one time only for this scope.\n      // (3) Render the fragment into the container and make sure the\n      // container knows its `part` is the one we just rendered. This ensures\n      // DOM will be re-used on subsequent renders.\n      if (firstScopeRender) {\n        const part = parts.get(renderContainer)!;\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(\n            scopeName, renderContainer as DocumentFragment, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n      }\n      // After elements have hit the DOM, update styling if this is the\n      // initial render to this container.\n      // This is needed whenever dynamic changes are made so it would be\n      // safest to do every render; however, this would regress performance\n      // so we leave it up to the user to call `ShadyCSS.styleElement`\n      // for dynamic changes.\n      if (!hasRendered && needsScoping) {\n        window.ShadyCSS!.styleElement((container as ShadowRoot).host);\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    <P extends PropertyKey>(prop: P, _obj: unknown): P => prop;\n\ndeclare global {\n  var JSCompiler_renameProperty: <P extends PropertyKey>(\n      prop: P, _obj: unknown) => P;\n\n  interface Window {\n    JSCompiler_renameProperty: typeof JSCompiler_renameProperty;\n  }\n}\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Function called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string|null, type?: TypeHint): Type;\n\n  /**\n   * Function called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n    ComplexAttributeConverter<Type>|((value: string, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean|string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\nexport type PropertyValues = Map<PropertyKey, unknown>;\n\nexport const defaultConverter: ComplexAttributeConverter = {\n\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        return value ? '' : null;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        return value == null ? value : JSON.stringify(value);\n    }\n    return value;\n  },\n\n  fromAttribute(value: string|null, type?: unknown) {\n    switch (type) {\n      case Boolean:\n        return value !== null;\n      case Number:\n        return value === null ? null : Number(value);\n      case Object:\n      case Array:\n        return JSON.parse(value!);\n    }\n    return value;\n  }\n\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual\n};\n\nconst microtaskPromise = Promise.resolve(true);\n\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\ntype UpdateState = typeof STATE_HAS_UPDATED|typeof STATE_UPDATE_REQUESTED|\n    typeof STATE_IS_REFLECTING_TO_ATTRIBUTE|\n    typeof STATE_IS_REFLECTING_TO_PROPERTY|typeof STATE_HAS_CONNECTED;\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport abstract class UpdatingElement extends HTMLElement {\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   */\n  private static _attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static[finalized] = true;\n\n  /**\n   * Memoized list of all class properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   */\n  private static _classProperties?: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring the property.\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this._classProperties!.forEach((v, p) => {\n      const attr = this._attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this._attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Ensures the private `_classProperties` property metadata is created.\n   * In addition to `finalize` this is also called in `createProperty` to\n   * ensure the `@property` decorator can add property metadata.\n   */\n  /** @nocollapse */\n  private static _ensureClassProperties() {\n    // ensure private storage for property declarations.\n    if (!this.hasOwnProperty(\n            JSCompiler_renameProperty('_classProperties', this))) {\n      this._classProperties = new Map();\n      // NOTE: Workaround IE11 not supporting Map constructor argument.\n      const superProperties: PropertyDeclarationMap =\n          Object.getPrototypeOf(this)._classProperties;\n      if (superProperties !== undefined) {\n        superProperties.forEach(\n            (v: PropertyDeclaration, k: PropertyKey) =>\n                this._classProperties!.set(k, v));\n      }\n    }\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   * @nocollapse\n   */\n  static createProperty(\n      name: PropertyKey,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure storage exists for property\n    // metadata.\n    this._ensureClassProperties();\n    this._classProperties!.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n      return;\n    }\n    const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n    Object.defineProperty(this.prototype, name, {\n      // tslint:disable-next-line:no-any no symbol in index\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: UpdatingElement, value: unknown) {\n        const oldValue =\n            (this as {} as {[key: string]: unknown})[name as string];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as UpdatingElement)._requestUpdate(name, oldValue);\n      },\n      configurable: true,\n      enumerable: true\n    });\n  }\n\n  /**\n   * Creates property accessors for registered properties and ensures\n   * any superclasses are also finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this);\n    if (!superCtor.hasOwnProperty(finalized)) {\n      superCtor.finalize();\n    }\n    this[finalized] = true;\n    this._ensureClassProperties();\n    // initialize Map populated in observedAttributes\n    this._attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...(typeof Object.getOwnPropertySymbols === 'function') ?\n            Object.getOwnPropertySymbols(props) :\n            []\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeSript lack of support for symbol in\n        // index types\n        // tslint:disable-next-line:no-any no symbol in index\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n  }\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static _attributeNameForProperty(\n      name: PropertyKey, options: PropertyDeclaration) {\n    const attribute = options.attribute;\n    return attribute === false ?\n        undefined :\n        (typeof attribute === 'string' ?\n             attribute :\n             (typeof name === 'string' ? name.toLowerCase() : undefined));\n  }\n\n  /**\n   * Returns true if a property should request an update.\n   * Called when a property value is set and uses the `hasChanged`\n   * option for the property if present or a strict identity check.\n   * @nocollapse\n   */\n  private static _valueHasChanged(\n      value: unknown, old: unknown, hasChanged: HasChanged = notEqual) {\n    return hasChanged(value, old);\n  }\n\n  /**\n   * Returns the property value for the given attribute value.\n   * Called via the `attributeChangedCallback` and uses the property's\n   * `converter` or `converter.fromAttribute` property option.\n   * @nocollapse\n   */\n  private static _propertyValueFromAttribute(\n      value: string|null, options: PropertyDeclaration) {\n    const type = options.type;\n    const converter = options.converter || defaultConverter;\n    const fromAttribute =\n        (typeof converter === 'function' ? converter : converter.fromAttribute);\n    return fromAttribute ? fromAttribute(value, type) : value;\n  }\n\n  /**\n   * Returns the attribute value for the given property value. If this\n   * returns undefined, the property will *not* be reflected to an attribute.\n   * If this returns null, the attribute will be removed, otherwise the\n   * attribute will be set to the value.\n   * This uses the property's `reflect` and `type.toAttribute` property options.\n   * @nocollapse\n   */\n  private static _propertyValueToAttribute(\n      value: unknown, options: PropertyDeclaration) {\n    if (options.reflect === undefined) {\n      return;\n    }\n    const type = options.type;\n    const converter = options.converter;\n    const toAttribute =\n        converter && (converter as ComplexAttributeConverter).toAttribute ||\n        defaultConverter.toAttribute;\n    return toAttribute!(value, type);\n  }\n\n  private _updateState: UpdateState = 0;\n  private _instanceProperties: PropertyValues|undefined = undefined;\n  private _updatePromise: Promise<unknown> = microtaskPromise;\n  private _hasConnectedResolver: (() => void)|undefined = undefined;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   */\n  private _changedProperties: PropertyValues = new Map();\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private _reflectingProperties: Map<PropertyKey, PropertyDeclaration>|\n      undefined = undefined;\n\n  constructor() {\n    super();\n    this.initialize();\n  }\n\n  /**\n   * Performs element initialization. By default captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    this._saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this._requestUpdate();\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private _saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof UpdatingElement)\n        ._classProperties!.forEach((_v, p) => {\n          if (this.hasOwnProperty(p)) {\n            const value = this[p as keyof this];\n            delete this[p as keyof this];\n            if (!this._instanceProperties) {\n              this._instanceProperties = new Map();\n            }\n            this._instanceProperties.set(p, value);\n          }\n        });\n  }\n\n  /**\n   * Applies previously saved instance properties.\n   */\n  private _applyInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    // tslint:disable-next-line:no-any\n    this._instanceProperties!.forEach((v, p) => (this as any)[p] = v);\n    this._instanceProperties = undefined;\n  }\n\n  connectedCallback() {\n    this._updateState = this._updateState | STATE_HAS_CONNECTED;\n    // Ensure first connection completes an update. Updates cannot complete\n    // before connection and if one is pending connection the\n    // `_hasConnectionResolver` will exist. If so, resolve it to complete the\n    // update, otherwise requestUpdate.\n    if (this._hasConnectedResolver) {\n      this._hasConnectedResolver();\n      this._hasConnectedResolver = undefined;\n    }\n  }\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   */\n  disconnectedCallback() {\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   */\n  attributeChangedCallback(name: string, old: string|null, value: string|null) {\n    if (old !== value) {\n      this._attributeToProperty(name, value);\n    }\n  }\n\n  private _propertyToAttribute(\n      name: PropertyKey, value: unknown,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const attr = ctor._attributeNameForProperty(name, options);\n    if (attr !== undefined) {\n      const attrValue = ctor._propertyValueToAttribute(value, options);\n      // an undefined value does not change the attribute.\n      if (attrValue === undefined) {\n        return;\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n    }\n  }\n\n  private _attributeToProperty(name: string, value: string|null) {\n    // Use tracking info to avoid deserializing attribute value if it was\n    // just set from a property setter.\n    if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n      return;\n    }\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const propName = ctor._attributeToPropertyMap.get(name);\n    if (propName !== undefined) {\n      const options =\n          ctor._classProperties!.get(propName) || defaultPropertyDeclaration;\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n      this[propName as keyof this] =\n          // tslint:disable-next-line:no-any\n          ctor._propertyValueFromAttribute(value, options) as any;\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n    }\n  }\n\n  /**\n   * This private version of `requestUpdate` does not access or return the\n   * `updateComplete` promise. This promise can be overridden and is therefore\n   * not free to access.\n   */\n  private _requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      const ctor = this.constructor as typeof UpdatingElement;\n      const options =\n          ctor._classProperties!.get(name) || defaultPropertyDeclaration;\n      if (ctor._valueHasChanged(\n              this[name as keyof this], oldValue, options.hasChanged)) {\n        if (!this._changedProperties.has(name)) {\n          this._changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true &&\n            !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n          if (this._reflectingProperties === undefined) {\n            this._reflectingProperties = new Map();\n          }\n          this._reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n      this._enqueueUpdate();\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should\n   * be called when an element should update based on some state not triggered\n   * by setting a property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored. Returns the `updateComplete` Promise which is resolved\n   * when the update completes.\n   *\n   * @param name {PropertyKey} (optional) name of requesting property\n   * @param oldValue {any} (optional) old value of requesting property\n   * @returns {Promise} A Promise that is resolved when the update completes.\n   */\n  requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    this._requestUpdate(name, oldValue);\n    return this.updateComplete;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async _enqueueUpdate() {\n    // Mark state updating...\n    this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n    let resolve!: (r: boolean) => void;\n    let reject!: (e: Error) => void;\n    const previousUpdatePromise = this._updatePromise;\n    this._updatePromise = new Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await previousUpdatePromise;\n    } catch (e) {\n      // Ignore any previous errors. We only care that the previous cycle is\n      // done. Any error should have been handled in the previous update.\n    }\n    // Make sure the element has connected before updating.\n    if (!this._hasConnected) {\n      await new Promise((res) => this._hasConnectedResolver = res);\n    }\n    try {\n      const result = this.performUpdate();\n      // If `performUpdate` returns a Promise, we await it. This is done to\n      // enable coordinating updates with a scheduler. Note, the result is\n      // checked to avoid delaying an additional microtask unless we need to.\n      if (result != null) {\n        await result;\n      }\n    } catch (e) {\n      reject(e);\n    }\n    resolve(!this._hasRequestedUpdate);\n  }\n\n  private get _hasConnected() {\n    return (this._updateState & STATE_HAS_CONNECTED);\n  }\n\n  private get _hasRequestedUpdate() {\n    return (this._updateState & STATE_UPDATE_REQUESTED);\n  }\n\n  protected get hasUpdated() {\n    return (this._updateState & STATE_HAS_UPDATED);\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * You can override this method to change the timing of updates. If this\n   * method is overridden, `super.performUpdate()` must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```\n   * protected async performUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.performUpdate();\n   * }\n   * ```\n   */\n  protected performUpdate(): void|Promise<unknown> {\n    // Mixin instance properties once, if they exist.\n    if (this._instanceProperties) {\n      this._applyInstanceProperties();\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.update(changedProperties);\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      throw e;\n    } finally {\n      // Ensure element can accept additional updates after an exception.\n      this._markUpdated();\n    }\n    if (shouldUpdate) {\n      if (!(this._updateState & STATE_HAS_UPDATED)) {\n        this._updateState = this._updateState | STATE_HAS_UPDATED;\n        this.firstUpdated(changedProperties);\n      }\n      this.updated(changedProperties);\n    }\n  }\n\n  private _markUpdated() {\n    this._changedProperties = new Map();\n    this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `_getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super._getUpdateComplete()`, then any subsequent state.\n   *\n   * @returns {Promise} The Promise returns a boolean that indicates if the\n   * update resolved without triggering another update.\n   */\n  get updateComplete() {\n    return this._getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   *   class MyElement extends LitElement {\n   *     async _getUpdateComplete() {\n   *       await super._getUpdateComplete();\n   *       await this._myChild.updateComplete;\n   *     }\n   *   }\n   */\n  protected _getUpdateComplete() {\n    return this._updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this._reflectingProperties !== undefined &&\n        this._reflectingProperties.size > 0) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this._reflectingProperties.forEach(\n          (v, k) => this._propertyToAttribute(k, this[k as keyof this], v));\n      this._reflectingProperties = undefined;\n    }\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected updated(_changedProperties: PropertyValues) {\n  }\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {LitElement} from '../lit-element.js';\n\nimport {PropertyDeclaration, UpdatingElement} from './updating-element.js';\n\nexport type Constructor<T> = {\n  new (...args: unknown[]): T\n};\n\n// From the TC39 Decorators proposal\ninterface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\ninterface ClassElement {\n  kind: 'field'|'method';\n  key: PropertyKey;\n  placement: 'static'|'prototype'|'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nconst legacyCustomElement =\n    (tagName: string, clazz: Constructor<HTMLElement>) => {\n      window.customElements.define(tagName, clazz);\n      // Cast as any because TS doesn't recognize the return type as being a\n      // subtype of the decorated class when clazz is typed as\n      // `Constructor<HTMLElement>` for some reason.\n      // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n      // applied to elements however.\n      // tslint:disable-next-line:no-any\n      return clazz as any;\n    };\n\nconst standardCustomElement =\n    (tagName: string, descriptor: ClassDescriptor) => {\n      const {kind, elements} = descriptor;\n      return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz: Constructor<HTMLElement>) {\n          window.customElements.define(tagName, clazz);\n        }\n      };\n    };\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName: string) =>\n    (classOrDescriptor: Constructor<HTMLElement>|ClassDescriptor) =>\n        (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\n\nconst standardProperty =\n    (options: PropertyDeclaration, element: ClassElement) => {\n      // When decorating an accessor, pass it through and add property metadata.\n      // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n      // stomp over the user's accessor.\n      if (element.kind === 'method' && element.descriptor &&\n          !('value' in element.descriptor)) {\n        return {\n          ...element,\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      } else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n          kind: 'field',\n          key: Symbol(),\n          placement: 'own',\n          descriptor: {},\n          // When @babel/plugin-proposal-decorators implements initializers,\n          // do this instead of the initializer below. See:\n          // https://github.com/babel/babel/issues/9260 extras: [\n          //   {\n          //     kind: 'initializer',\n          //     placement: 'own',\n          //     initializer: descriptor.initializer,\n          //   }\n          // ],\n          initializer(this: {[key: string]: unknown}) {\n            if (typeof element.initializer === 'function') {\n              this[element.key as string] = element.initializer.call(this);\n            }\n          },\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      }\n    };\n\nconst legacyProperty =\n    (options: PropertyDeclaration, proto: Object, name: PropertyKey) => {\n      (proto.constructor as typeof UpdatingElement)\n          .createProperty(name, options);\n    };\n\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // tslint:disable-next-line:no-any decorator\n  return (protoOrDescriptor: Object|ClassElement, name?: PropertyKey): any =>\n             (name !== undefined) ?\n      legacyProperty(options!, protoOrDescriptor as Object, name) :\n      standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function query(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function queryAll(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelectorAll(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\nconst legacyQuery =\n    (descriptor: PropertyDescriptor, proto: Object, name: PropertyKey) => {\n      Object.defineProperty(proto, name, descriptor);\n    };\n\nconst standardQuery = (descriptor: PropertyDescriptor, element: ClassElement) =>\n    ({\n      kind: 'method',\n      placement: 'prototype',\n      key: element.key,\n      descriptor,\n    });\n\nconst standardEventOptions =\n    (options: AddEventListenerOptions, element: ClassElement) => {\n      return {\n        ...element,\n        finisher(clazz: typeof UpdatingElement) {\n          Object.assign(\n              clazz.prototype[element.key as keyof UpdatingElement], options);\n        }\n      };\n    };\n\nconst legacyEventOptions =\n    // tslint:disable-next-line:no-any legacy decorator\n    (options: AddEventListenerOptions, proto: any, name: PropertyKey) => {\n      Object.assign(proto[name], options);\n    };\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options: AddEventListenerOptions) =>\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    ((protoOrDescriptor: Object|ClassElement, name?: string) =>\n         (name !== undefined) ?\n         legacyEventOptions(options, protoOrDescriptor as Object, name) :\n         standardEventOptions(options, protoOrDescriptor as ClassElement)) as\n        // tslint:disable-next-line:no-any decorator\n        any;\n","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const supportsAdoptingStyleSheets =\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\n\nconst constructionToken = Symbol();\n\nexport class CSSResult {\n  _styleSheet?: CSSStyleSheet|null;\n\n  readonly cssText: string;\n\n  constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n          'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet|null {\n    if (this._styleSheet === undefined) {\n      // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n      // is constructable.\n      if (supportsAdoptingStyleSheets) {\n        this._styleSheet = new CSSStyleSheet();\n        this._styleSheet.replaceSync(this.cssText);\n      } else {\n        this._styleSheet = null;\n      }\n    }\n    return this._styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) => {\n  return new CSSResult(String(value), constructionToken);\n};\n\nconst textFromCSSResult = (value: CSSResult|number) => {\n  if (value instanceof CSSResult) {\n    return value.cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n        `Value passed to 'css' function must be a 'css' function result: ${\n            value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n  }\n};\n\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css =\n    (strings: TemplateStringsArray, ...values: (CSSResult|number)[]) => {\n      const cssText = values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]);\n      return new CSSResult(cssText, constructionToken);\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport {TemplateResult} from 'lit-html';\nimport {render} from 'lit-html/lib/shady-render.js';\n\nimport {PropertyValues, UpdatingElement} from './lib/updating-element.js';\n\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport {html, svg, TemplateResult, SVGTemplateResult} from 'lit-html/lit-html.js';\nimport {supportsAdoptingStyleSheets, CSSResult} from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n\ndeclare global {\n  interface Window {\n    litElementVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.2.1');\n\nexport interface CSSResultArray extends Array<CSSResult|CSSResultArray> {}\n\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(\n    styles: CSSResultArray, result: CSSResult[] = []): CSSResult[] {\n  for (let i = 0, length = styles.length; i < length; i++) {\n    const value = styles[i];\n    if (Array.isArray(value)) {\n      arrayFlat(value, result);\n    } else {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles: CSSResultArray): CSSResult[] =>\n    styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\n\nexport class LitElement extends UpdatingElement {\n\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See updating-element.ts for more information.\n   */\n  protected static['finalized'] = true;\n  /**\n   * Render method used to render the lit-html TemplateResult to the element's\n   * DOM.\n   * @param {TemplateResult} Template to render.\n   * @param {Element|DocumentFragment} Node into which to render.\n   * @param {String} Element name.\n   * @nocollapse\n   */\n  static render = render;\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static styles?: CSSResult|CSSResultArray;\n\n  private static _styles: CSSResult[]|undefined;\n\n  /** @nocollapse */\n  protected static finalize() {\n    // The Closure JS Compiler does not always preserve the correct \"this\"\n    // when calling static super methods (b/137460243), so explicitly bind.\n    super.finalize.call(this);\n    // Prepare styling that is stamped at first render time. Styling\n    // is built from user provided `styles` or is inherited from the superclass.\n    this._styles =\n        this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n        this._getUniqueStyles() :\n        this._styles || [];\n  }\n\n  /** @nocollapse */\n  private static _getUniqueStyles(): CSSResult[] {\n    // Take care not to call `this.styles` multiple times since this generates\n    // new CSSResults each time.\n    // TODO(sorvell): Since we do not cache CSSResults by input, any\n    // shared styles will generate new stylesheet objects, which is wasteful.\n    // This should be addressed when a browser ships constructable\n    // stylesheets.\n    const userStyles = this.styles;\n    const styles: CSSResult[] = [];\n    if (Array.isArray(userStyles)) {\n      const flatStyles = flattenStyles(userStyles);\n      // As a performance optimization to avoid duplicated styling that can\n      // occur especially when composing via subclassing, de-duplicate styles\n      // preserving the last item in the list. The last item is kept to\n      // try to preserve cascade order with the assumption that it's most\n      // important that last added styles override previous styles.\n      const styleSet = flatStyles.reduceRight((set, s) => {\n        set.add(s);\n        // on IE set.add does not return the set.\n        return set;\n      }, new Set<CSSResult>());\n      // Array.from does not work on Set in IE\n      styleSet.forEach((v) => styles.unshift(v));\n    } else if (userStyles) {\n      styles.push(userStyles);\n    }\n    return styles;\n  }\n\n  private _needsShimAdoptedStyleSheets?: boolean;\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   */\n  readonly renderRoot!: Element|DocumentFragment;\n\n  /**\n   * Performs element initialization. By default this calls `createRenderRoot`\n   * to create the element `renderRoot` node and captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    super.initialize();\n    (this as {renderRoot: Element | DocumentFragment}).renderRoot =\n        this.createRenderRoot();\n    // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n    // element's getRootNode(). While this could be done, we're choosing not to\n    // support this now since it would require different logic around de-duping.\n    if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n      this.adoptStyles();\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   * @returns {Element|DocumentFragment} Returns a node into which to render.\n   */\n  protected createRenderRoot(): Element|ShadowRoot {\n    return this.attachShadow({mode: 'open'});\n  }\n\n  /**\n   * Applies styling to the element shadowRoot using the `static get styles`\n   * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n   * available and will fallback otherwise. When Shadow DOM is polyfilled,\n   * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n   * is available but `adoptedStyleSheets` is not, styles are appended to the\n   * end of the `shadowRoot` to [mimic spec\n   * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n   */\n  protected adoptStyles() {\n    const styles = (this.constructor as typeof LitElement)._styles!;\n    if (styles.length === 0) {\n      return;\n    }\n    // There are three separate cases here based on Shadow DOM support.\n    // (1) shadowRoot polyfilled: use ShadyCSS\n    // (2) shadowRoot.adoptedStyleSheets available: use it.\n    // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n    // rendering\n    if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n      window.ShadyCSS.ScopingShim!.prepareAdoptedCssText(\n          styles.map((s) => s.cssText), this.localName);\n    } else if (supportsAdoptingStyleSheets) {\n      (this.renderRoot as ShadowRoot).adoptedStyleSheets =\n          styles.map((s) => s.styleSheet!);\n    } else {\n      // This must be done after rendering so the actual style insertion is done\n      // in `update`.\n      this._needsShimAdoptedStyleSheets = true;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // Note, first update/render handles styleElement so we only call this if\n    // connected after first update.\n    if (this.hasUpdated && window.ShadyCSS !== undefined) {\n      window.ShadyCSS.styleElement(this);\n    }\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(changedProperties: PropertyValues) {\n    super.update(changedProperties);\n    const templateResult = this.render() as unknown;\n    if (templateResult instanceof TemplateResult) {\n      (this.constructor as typeof LitElement)\n          .render(\n              templateResult,\n              this.renderRoot,\n              {scopeName: this.localName, eventContext: this});\n    }\n    // When native Shadow DOM is used but adoptedStyles are not supported,\n    // insert styling after rendering to ensure adoptedStyles have highest\n    // priority.\n    if (this._needsShimAdoptedStyleSheets) {\n      this._needsShimAdoptedStyleSheets = false;\n      (this.constructor as typeof LitElement)._styles!.forEach((s) => {\n        const style = document.createElement('style');\n        style.textContent = s.cssText;\n        this.renderRoot.appendChild(style);\n      });\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render(): TemplateResult|void {\n  }\n}\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","function posOnGraph(editor, { relativeX, relativeY }) {\r\n  return {\r\n    x: relativeX / editor.zoom + editor.center.x,\r\n    y: -relativeY / editor.zoom + editor.center.y,\r\n  }\r\n}\r\n\r\nfunction relativePos({ clientX, clientY }, base) {\r\n  const rect = base.getBoundingClientRect()\r\n  return {\r\n    relativeX: clientX - rect.x - rect.width / 2,\r\n    relativeY: clientY - rect.y - rect.height / 2,\r\n  }\r\n}\r\n\r\nexport { posOnGraph, relativePos }\r\n","export default \"application/x.snct-diagram-editor+json\"\n","export default \"application/x.snct-kampo-diagram-editor+json\"\n","import { html, render } from \"lit-html\"\r\n\r\nconst prototype = Object.getPrototypeOf(html``)\r\n\r\n// ## Usage\r\n// standard case\r\n//\r\n// ```\r\n// element.append(realize(html`...`))\r\n// ```\r\n// or, to ignore comments or textnodes,\r\n//\r\n// ```\r\n// element.append(...realize(html`...`).children)\r\n// ```\r\n\r\nfunction realize(templateResult) {\r\n  const template = forcePrototype(templateResult)\r\n  const container = document.createDocumentFragment()\r\n\r\n  render(template, container)\r\n\r\n  return container\r\n}\r\n\r\nfunction forcePrototype(templateResult) {\r\n  const descriptors = Object.keys(templateResult).reduce((acc, k) => {\r\n    acc[k] = { value: templateResult[k] }\r\n    return acc\r\n  }, {})\r\n\r\n  return Object.create(prototype, descriptors)\r\n}\r\n\r\nexport default realize\r\n","class Command {\r\n  constructor(up, down) {\r\n    this.upProc = up\r\n    this.downProc = down\r\n  }\r\n\r\n  up() {\r\n    this.upProc()\r\n  }\r\n\r\n  down() {\r\n    this.downProc()\r\n  }\r\n}\r\n\r\nexport default Command\r\n","class CommandEvent extends CustomEvent {\r\n  constructor(command, opts = {}) {\r\n    const defaultOpts = {\r\n      bubbles: true,\r\n      cancelable: false,\r\n      composed: true,\r\n    }\r\n    const detail = Object.assign({ command }, opts.detail || { command })\r\n\r\n    const option = Object.assign({}, defaultOpts, opts, { detail })\r\n    Object.assign({}, option.detail, { command })\r\n\r\n    super(\"command\", option)\r\n  }\r\n}\r\n\r\nexport default CommandEvent\r\n","const LOADER = {\r\n  parse({ name, resources }) {\r\n    const element = document.createElement(name)\r\n    element.init(resources)\r\n    return element\r\n  },\r\n}\r\n\r\nexport default LOADER\r\n","import { html, css, LitElement } from \"lit-element\"\r\n\r\nclass EditorLasso extends LitElement {\r\n  render() {\r\n    return html`\r\n      <style>\r\n        :host {\r\n          --lasso-top: ${Math.min(this.starty, this.endy)}px;\r\n          --lasso-left: ${Math.min(this.startx, this.endx)}px;\r\n          --lasso-width: ${Math.abs(this.endx - this.startx)}px;\r\n          --lasso-height: ${Math.abs(this.endy - this.starty)}px;\r\n        }\r\n      </style>\r\n      <div class=\"lasso\"></div>\r\n    `\r\n  }\r\n\r\n  static get styles() {\r\n    return css`\r\n      .lasso {\r\n        border: dashed 1px;\r\n        position: fixed;\r\n        top: var(--lasso-top);\r\n        left: var(--lasso-left);\r\n        width: var(--lasso-width);\r\n        height: var(--lasso-height);\r\n      }\r\n    `\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      startx: { type: Number, reflect: true },\r\n      starty: { type: Number, reflect: true },\r\n      endx: { type: Number, reflect: true },\r\n      endy: { type: Number, reflect: true },\r\n    }\r\n  }\r\n}\r\n\r\ncustomElements.define(\"editor-lasso\", EditorLasso)\r\n","import { html, css, LitElement } from \"lit-element\"\r\nimport UUIDv4 from \"uuid/v4\"\r\nimport { posOnGraph, relativePos } from \"../graph/util.js/\"\r\nimport MIME_EDITOR from \"../mime-editor.js\"\r\nimport MIME_KAMPO from \"../mime-kampo.js\"\r\nimport realize from \"../realize.js\"\r\nimport Command from \"../command.js\"\r\nimport CommandEvent from \"../command-event.js\"\r\nimport LOADER from \"../wc-loader.js\"\r\n\r\nimport \"./editor-lasso.js\"\r\n\r\nlet styles = css`\r\n  :host {\r\n    display: block;\r\n    height: 100%;\r\n  }\r\n\r\n  .graph-editor {\r\n    --zoom: 1;\r\n    --center-x: 0px;\r\n    --center-y: 0px;\r\n    height: 100%;\r\n    background-color: lightblue;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .graph-pane {\r\n    position: relative;\r\n    top: 0px;\r\n    left: 0px;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 0px;\r\n  }\r\n\r\n  .graph-pane__layers-container {\r\n    position: absolute;\r\n    top: calc(50% + var(--zoom) * var(--center-y));\r\n    left: calc(50% - var(--zoom) * var(--center-x));\r\n    box-sizing: border-box;\r\n    width: 0px;\r\n    height: 0px;\r\n    transform-origin: center;\r\n    transform: scale(var(--zoom));\r\n    overflow: visible;\r\n    /* transition: transform 1s; */\r\n    pointer-events: none;\r\n  }\r\n`\r\n\r\nclass GraphEditor extends LitElement {\r\n  constructor() {\r\n    super()\r\n    this.zoom = 1\r\n    this.centerX = 0\r\n    this.centerY = 0\r\n    this.draggedData = null\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <div\r\n        class=\"graph-editor\"\r\n        style=\"\r\n        --zoom: ${this.zoom};\r\n        --center-x: ${this.center.x}px;\r\n        --center-y: ${this.center.y}px;\r\n      \"\r\n      >\r\n        <div\r\n          class=\"graph-pane\"\r\n          draggable=\"true\"\r\n          @dragenter=${this.handleDragOver}\r\n          @dragover=${this.handleDragOver}\r\n          @dragend=${this.handleDragEnd}\r\n          @dragstart=${this.handleDragStart}\r\n          @drop=${this.handleDrop}\r\n          @click=${this.handleClick}\r\n          @contextmenu=${this.handleContextMenu}\r\n        >\r\n          <div class=\"graph-pane__layers-container\">\r\n            <slot name=\"link-layer\"></slot>\r\n            <slot name=\"node-layer\"></slot>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <span id=\"blank\"></span>\r\n    `\r\n  }\r\n\r\n  static get styles() {\r\n    return styles\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      zoom: { type: Number, reflect: true },\r\n      centerX: { type: Number, reflect: true },\r\n      centerY: { type: Number, reflect: true },\r\n    }\r\n  }\r\n\r\n  get center() {\r\n    return {\r\n      x: this.centerX,\r\n      y: this.centerY,\r\n    }\r\n  }\r\n  set center({ x, y }) {\r\n    this.centerX = x\r\n    this.centerY = y\r\n  }\r\n\r\n  posOnGraph(relativePos) {\r\n    return posOnGraph(this, relativePos)\r\n  }\r\n\r\n  relativePos(clientPos) {\r\n    return relativePos(clientPos, this)\r\n  }\r\n\r\n  handleDragStart(event) {\r\n    const pos = this.posOnGraph(this.relativePos(event))\r\n\r\n    event.dataTransfer.setData(MIME_EDITOR, JSON.stringify({}))\r\n\r\n    if (event.ctrlKey) {\r\n      const lasso = document.createElement(\"editor-lasso\")\r\n      this.shadowRoot.querySelector(\".graph-pane\").appendChild(lasso)\r\n\r\n      lasso.startx = event.clientX\r\n      lasso.starty = event.clientY\r\n\r\n      this.draggedData = {\r\n        type: \"lasso\",\r\n        element: lasso,\r\n      }\r\n\r\n      const img = this.shadowRoot.querySelector(\"#blank\")\r\n      event.dataTransfer.setDragImage(img, 0, 0)\r\n      event.dataTransfer.effectAllowed = \"all\"\r\n    } else {\r\n      this.draggedData = {\r\n        type: \"pane\",\r\n        from: pos,\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDragOver(event) {\r\n    event.preventDefault()\r\n\r\n    if (![...event.dataTransfer.types].includes(MIME_EDITOR)) {\r\n      return\r\n    }\r\n    if (this.draggedData == null) {\r\n      return\r\n    }\r\n\r\n    const pos = this.posOnGraph(this.relativePos(event))\r\n    switch (this.draggedData.type) {\r\n      case \"node\": {\r\n        event.dataTransfer.dropEffect = \"move\"\r\n\r\n        const { element, pos: mod } = this.draggedData\r\n\r\n        const next = {\r\n          x: this.center.x + pos.x - mod.x,\r\n          y: this.center.y + pos.y - mod.y,\r\n        }\r\n\r\n        element.posx = next.x\r\n        element.posy = next.y\r\n\r\n        break\r\n      }\r\n\r\n      case \"move-selected\": {\r\n        event.dataTransfer.dropEffect = \"move\"\r\n\r\n        const data = this.draggedData\r\n        const selected = data.elements\r\n\r\n        const delta = {\r\n          x: this.center.x + pos.x - data.pos.x - data.element.posx,\r\n          y: this.center.y + pos.y - data.pos.y - data.element.posy,\r\n        }\r\n\r\n        selected.forEach(node => {\r\n          node.posx = node.posx + delta.x\r\n          node.posy = node.posy + delta.y\r\n        })\r\n\r\n        break\r\n      }\r\n\r\n      case \"lasso\": {\r\n        const { element } = this.draggedData\r\n\r\n        element.endx = event.clientX\r\n        element.endy = event.clientY\r\n\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDragEnd(event) {\r\n    event.preventDefault()\r\n\r\n    if (this.draggedData == null) {\r\n      return\r\n    }\r\n\r\n    switch (this.draggedData.type) {\r\n      case \"node\": {\r\n        const { element, originalPos } = this.draggedData\r\n        element.posx = originalPos.x\r\n        element.posy = originalPos.y\r\n\r\n        break\r\n      }\r\n\r\n      case \"lasso\": {\r\n        const { element } = this.draggedData\r\n        element.remove()\r\n\r\n        break\r\n      }\r\n    }\r\n\r\n    this.draggedData = null\r\n  }\r\n\r\n  handleDrop(event) {\r\n    event.preventDefault()\r\n\r\n    const pos = this.posOnGraph(this.relativePos(event))\r\n\r\n    console.log(event.dataTransfer.types, MIME_EDITOR, MIME_KAMPO)\r\n\r\n    const editorPayload = event.dataTransfer.getData(MIME_EDITOR)\r\n    if (editorPayload) {\r\n      this.dropInEditor(this.draggedData, pos)\r\n    }\r\n\r\n    const kampoPayload = event.dataTransfer.getData(MIME_KAMPO)\r\n    if (kampoPayload) {\r\n      this.dropKampo(JSON.parse(kampoPayload), pos)\r\n    }\r\n\r\n    this.draggedData = null\r\n  }\r\n\r\n  dropInEditor(data, pos) {\r\n    switch (data.type) {\r\n      case \"pane\": {\r\n        this.center = {\r\n          x: this.center.x - (pos.x - data.from.x),\r\n          y: this.center.y - (pos.y - data.from.y),\r\n        }\r\n        break\r\n      }\r\n      case \"node\": {\r\n        let node = data.element\r\n\r\n        const prev = data.originalPos\r\n        const next = {\r\n          x: this.center.x + pos.x - data.pos.x,\r\n          y: this.center.y + pos.y - data.pos.y,\r\n        }\r\n\r\n        node.posx = next.x\r\n        node.posy = next.y\r\n\r\n        this.dispatchEvent(\r\n          new CommandEvent(this.createNodeMoveCommand(node, prev, next))\r\n        )\r\n\r\n        break\r\n      }\r\n\r\n      case \"move-selected\": {\r\n        let selected = data.elements\r\n\r\n        const delta = {\r\n          x: this.center.x + pos.x - data.pos.x - data.originalPos.x,\r\n          y: this.center.y + pos.y - data.pos.y - data.originalPos.y,\r\n        }\r\n\r\n        selected.forEach(node => {\r\n          node.selected = false\r\n        })\r\n\r\n        this.dispatchEvent(\r\n          new CommandEvent(this.createMoveSelectedCommand(selected, delta))\r\n        )\r\n\r\n        break\r\n      }\r\n\r\n      case \"lasso\": {\r\n        const { element } = this.draggedData\r\n\r\n        const start = this.posOnGraph(\r\n          this.relativePos({ clientX: element.startx, clientY: element.starty })\r\n        )\r\n        const end = this.posOnGraph(\r\n          this.relativePos({ clientX: element.endx, clientY: element.endy })\r\n        )\r\n\r\n        const min = {\r\n          x: Math.min(start.x, end.x),\r\n          y: Math.min(start.y, end.y),\r\n        }\r\n        const max = {\r\n          x: Math.max(start.x, end.x),\r\n          y: Math.max(start.y, end.y),\r\n        }\r\n\r\n        const nodes = Array.from(\r\n          this.querySelector(\"[slot=node-layer]\").children\r\n        )\r\n\r\n        const selected = nodes.filter(node => {\r\n          const stateX = min.x <= node.posx && node.posx <= max.x\r\n          const stateY = min.y <= node.posy && node.posy <= max.y\r\n          return stateX && stateY\r\n        })\r\n\r\n        selected.forEach(node => {\r\n          node.selected = true\r\n        })\r\n\r\n        element.remove()\r\n\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  dropKampo(payload, pos) {\r\n    if (payload.type == \"searched\") {\r\n      let pattern = payload.item\r\n\r\n      const fragment = realize(\r\n        this.nodeTemplate(\r\n          { pos },\r\n          html`\r\n            <graph-content-pattern .patternData=${pattern}>\r\n            </graph-content-pattern>\r\n          `\r\n        )\r\n      )\r\n\r\n      const node = fragment.children[0]\r\n\r\n      this.appendNode(node)\r\n      this.dispatchEvent(new CommandEvent(this.createAppendNodeCommand(node)))\r\n    }\r\n\r\n    this.draggedData = null\r\n  }\r\n\r\n  handleClick(event) {\r\n    event.preventDefault()\r\n    const pos = this.posOnGraph(this.relativePos(event))\r\n\r\n    const fragment = realize(\r\n      this.nodeTemplate(\r\n        { pos },\r\n        html`\r\n          <graph-content-note .x=${0}></graph-content-note>\r\n        `\r\n      )\r\n    )\r\n\r\n    const node = fragment.children[0]\r\n\r\n    this.appendNode(node)\r\n    node.firstElementChild.focus()\r\n\r\n    this.dispatchEvent(new CommandEvent(this.createAppendNodeCommand(node)))\r\n  }\r\n\r\n  handleContextMenu(event) {\r\n    event.preventDefault()\r\n\r\n    const template = html`\r\n      <graph-contextmenu posx=${event.x} posy=${event.y}>\r\n        <graph-contextmenu-item .operation=${() => console.log(\"hello\")}>\r\n          HELLO!\r\n        </graph-contextmenu-item>\r\n      </graph-contextmenu>\r\n    `\r\n\r\n    document.body.append(...realize(template).children)\r\n  }\r\n\r\n  appendNode(node) {\r\n    let nodeList = [...this.children].find(x => x.slot == \"node-layer\")\r\n    nodeList.appendChild(node)\r\n  }\r\n\r\n  link(from, to) {\r\n    let linkList = [...this.children].find(x => x.slot == \"link-layer\")\r\n    linkList.link(from, to)\r\n  }\r\n\r\n  nodeTemplate({ id, pos: { x, y } = {} }, children) {\r\n    return html`\r\n      <graph-node id=${id || UUIDv4()} posx=${x || 0} posy=${y || 0}>\r\n        ${children}\r\n      </graph-node>\r\n    `\r\n  }\r\n\r\n  createAppendNodeCommand(node) {\r\n    const up = () => {\r\n      this.appendNode(node)\r\n    }\r\n    const down = () => {\r\n      node.remove()\r\n    }\r\n\r\n    return new Command(up, down)\r\n  }\r\n\r\n  createNodeMoveCommand(node, prev, next) {\r\n    const up = () => {\r\n      node.posx = next.x\r\n      node.posy = next.y\r\n    }\r\n    const down = () => {\r\n      node.posx = prev.x\r\n      node.posy = prev.y\r\n    }\r\n\r\n    return new Command(up, down)\r\n  }\r\n\r\n  createMoveSelectedCommand(selected, delta) {\r\n    const up = () => {\r\n      selected.forEach(node => {\r\n        node.posx = node.posx + delta.x\r\n        node.posy = node.posy + delta.y\r\n      })\r\n    }\r\n    const down = () => {\r\n      selected.forEach(node => {\r\n        node.posx = node.posx - delta.x\r\n        node.posy = node.posy - delta.y\r\n      })\r\n    }\r\n\r\n    return new Command(up, down)\r\n  }\r\n\r\n  toPlainObj() {\r\n    return {\r\n      name: \"graph-editor\",\r\n      resources: {\r\n        nodes: [...this.children]\r\n          .find(x => x.slot == \"node-layer\")\r\n          .toPlainObj(),\r\n        links: [...this.children]\r\n          .find(x => x.slot == \"link-layer\")\r\n          .toPlainObj(),\r\n      },\r\n    }\r\n  }\r\n\r\n  serialize() {\r\n    return JSON.stringify(this.toPlainObj())\r\n  }\r\n\r\n  init({ nodes, links }) {\r\n    this.append(LOADER.parse(nodes), LOADER.parse(links))\r\n  }\r\n}\r\n\r\ncustomElements.define(\"graph-editor\", GraphEditor)\r\n\r\nexport default GraphEditor\r\n","import { html, css, LitElement } from \"lit-element\"\r\nimport LOADER from \"../wc-loader.js\"\r\n\r\nlet styles = css`\r\n  :host {\r\n    display: block;\r\n    position: relative;\r\n  }\r\n\r\n  .graph-pane__nodes-layer {\r\n    pointer-events: none;\r\n  }\r\n\r\n  .graph-pane__nodes-layer > * {\r\n    pointer-events: auto;\r\n  }\r\n`\r\n\r\nclass GraphNodeList extends LitElement {\r\n  constructor() {\r\n    super()\r\n\r\n    this.observer = new MutationObserver(mutations => {\r\n      mutations\r\n        .filter(x => x.removedNodes.length > 0)\r\n        .forEach(({ removedNodes }) => {\r\n          removedNodes.forEach(node => {\r\n            const id = node.id\r\n            const links = [\r\n              ...this.parentElement.querySelector(\"[slot=link-layer]\").children,\r\n            ]\r\n\r\n            links\r\n              .filter(x => x.linkFrom == id || x.linkTo == id)\r\n              .forEach(x => {\r\n                x.remove()\r\n              })\r\n          })\r\n        })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"graph-pane__nodes-layer\">\r\n        <slot></slot>\r\n      </div>\r\n    `\r\n  }\r\n\r\n  static get styles() {\r\n    return styles\r\n  }\r\n\r\n  static get properties() {\r\n    return {}\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback()\r\n\r\n    this.observer.observe(this, { childList: true })\r\n  }\r\n\r\n  toPlainObj() {\r\n    return {\r\n      name: \"graph-node-list\",\r\n      resources: [...this.children].map(x => x.toPlainObj()),\r\n    }\r\n  }\r\n\r\n  init(nodes) {\r\n    this.slot = \"node-layer\"\r\n    this.append(...nodes.map(x => LOADER.parse(x)))\r\n  }\r\n}\r\n\r\ncustomElements.define(\"graph-node-list\", GraphNodeList)\r\n\r\nexport default GraphNodeList\r\n","import { html, css, LitElement } from \"lit-element\"\r\nimport { posOnGraph, relativePos } from \"../graph/util.js\"\r\nimport MIME_EDITOR from \"../mime-editor.js\"\r\nimport Command from \"../command.js\"\r\nimport CommandEvent from \"../command-event.js\"\r\nimport LOADER from \"../wc-loader.js\"\r\n\r\nlet styles = css`\r\n  :host {\r\n    display: block;\r\n    position: absolute;\r\n    top: calc(50% - var(--pos-y));\r\n    left: calc(50% + var(--pos-x));\r\n    transform: translate(-50%, -50%);\r\n    will-change: transform;\r\n    --node-border: solid 1px;\r\n  }\r\n\r\n  :host([selected]) {\r\n    --node-border: solid 2px;\r\n  }\r\n\r\n  .graph-node {\r\n    --pos-x: 0px;\r\n    --pos-y: 0px;\r\n\r\n    width: 150px;\r\n    background-color: beige;\r\n    border: var(--node-border);\r\n\r\n    box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.15);\r\n  }\r\n\r\n  .graph-node:hover {\r\n    box-shadow: 0px 10px 20px 0px rgba(0, 0, 0, 0.15);\r\n    z-index: 1;\r\n  }\r\n\r\n  #blank {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 0;\r\n    height: 0;\r\n  }\r\n`\r\n\r\nclass GraphNode extends LitElement {\r\n  render() {\r\n    this.style[\"--pos-x\"] = `${this.posx}px`\r\n    this.style[\"--pos-y\"] = `${this.posy}px`\r\n\r\n    return html`\r\n      <style>\r\n        :host {\r\n          --pos-x: ${this.posx}px;\r\n          --pos-y: ${this.posy}px;\r\n        }\r\n      </style>\r\n      <div class=\"graph-node\">\r\n        <slot></slot>\r\n      </div>\r\n      <span id=\"blank\"></span>\r\n    `\r\n  }\r\n\r\n  static get styles() {\r\n    return styles\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      id: { type: String, reflect: true },\r\n      posx: { type: Number, reflect: true },\r\n      posy: { type: Number, reflect: true },\r\n      selected: { type: Boolean, reflect: true },\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback()\r\n\r\n    this.setAttribute(\"draggable\", \"true\")\r\n    this.addEventListener(\"dragover\", e => e.preventDefault())\r\n    this.addEventListener(\"dragenter\", e => e.preventDefault())\r\n    this.addEventListener(\"dragstart\", this.handleDragStart)\r\n    this.addEventListener(\"drop\", this.handleDrop)\r\n    this.addEventListener(\"click\", this.handleClick)\r\n  }\r\n\r\n  get editor() {\r\n    return this.closest(\"graph-editor\")\r\n  }\r\n\r\n  posOnGraph(relativePos) {\r\n    return posOnGraph(this.editor, relativePos)\r\n  }\r\n\r\n  relativePos(clientPos) {\r\n    return relativePos(clientPos, this)\r\n  }\r\n\r\n  handleDragStart(event) {\r\n    if (event.ctrlKey) {\r\n      this.dragStartLink(event)\r\n    } else if (this.selected) {\r\n      this.dragStartMoveSelected(event)\r\n    } else {\r\n      this.dragStartMove(event)\r\n    }\r\n  }\r\n\r\n  dragStartMove(event) {\r\n    event.stopPropagation()\r\n\r\n    let editor = this.editor\r\n\r\n    let pos = this.posOnGraph(this.relativePos(event))\r\n\r\n    let originalPos = { x: this.posx, y: this.posy }\r\n\r\n    event.dataTransfer.setData(MIME_EDITOR, JSON.stringify({}))\r\n    const img = this.shadowRoot.querySelector(\"#blank\")\r\n    event.dataTransfer.setDragImage(img, 0, 0)\r\n    event.dataTransfer.effectAllowed = \"all\"\r\n\r\n    editor.draggedData = {\r\n      type: \"node\",\r\n      id: this.id,\r\n      element: this,\r\n      pos,\r\n      originalPos,\r\n    }\r\n  }\r\n\r\n  dragStartMoveSelected(event) {\r\n    this.dragStartMove(event)\r\n    Object.assign(this.editor.draggedData, {\r\n      type: \"move-selected\",\r\n      elements: [...this.editor.querySelectorAll(\"[selected]\")],\r\n    })\r\n  }\r\n\r\n  dragStartLink(event) {\r\n    event.stopPropagation()\r\n\r\n    event.dataTransfer.setData(MIME_EDITOR, JSON.stringify({}))\r\n\r\n    this.editor.draggedData = {\r\n      type: \"node-link\",\r\n      id: this.id,\r\n      element: this,\r\n    }\r\n\r\n    console.log(event)\r\n  }\r\n\r\n  handleDrop(event) {\r\n    const json = event.dataTransfer.getData(MIME_EDITOR)\r\n    if (json == \"\") {\r\n      return\r\n    }\r\n\r\n    const draggedData = this.editor.draggedData\r\n\r\n    switch (draggedData.type) {\r\n      case \"node-link\": {\r\n        if (draggedData.id == this.id) {\r\n          break\r\n        }\r\n        event.stopPropagation()\r\n        this.editor.link(draggedData.id, this.id)\r\n      }\r\n    }\r\n  }\r\n\r\n  handleClick(e) {\r\n    e.stopPropagation()\r\n  }\r\n\r\n  destroy() {\r\n    this.dispatchEvent(new CommandEvent(this.createDestroyCommand()))\r\n    this.remove()\r\n  }\r\n\r\n  createDestroyCommand() {\r\n    const editor = this.closest(\"graph-editor\")\r\n    const linkLayer = editor.querySelector(\"[slot=link-layer]\")\r\n\r\n    const links = [...linkLayer.children].filter(\r\n      x => x.linkFrom == this.id || x.linkTo == this.id\r\n    )\r\n\r\n    const up = () => {\r\n      this.remove()\r\n    }\r\n\r\n    const down = () => {\r\n      editor.appendNode(this)\r\n      linkLayer.append(...links)\r\n    }\r\n\r\n    return new Command(up, down)\r\n  }\r\n\r\n  toPlainObj() {\r\n    return {\r\n      name: \"graph-node\",\r\n      resources: {\r\n        id: this.id,\r\n        posx: this.posx,\r\n        posy: this.posy,\r\n        content: this.firstElementChild.toPlainObj(),\r\n      },\r\n    }\r\n  }\r\n\r\n  init({ id, posx, posy, content }) {\r\n    this.id = id\r\n    this.posx = posx\r\n    this.posy = posy\r\n    this.append(LOADER.parse(content))\r\n  }\r\n}\r\n\r\ncustomElements.define(\"graph-node\", GraphNode)\r\n\r\nexport default GraphNode\r\n","import { html, css, LitElement } from \"lit-element\"\r\nimport realize from \"../realize.js\"\r\nimport Command from \"../command.js\"\r\nimport CommandEvent from \"../command-event.js\"\r\n\r\nconst styles = css`\r\n  :host {\r\n    display: block;\r\n  }\r\n\r\n  .graph-node__note {\r\n    min-height: 1.6em;\r\n    width: 100%;\r\n    overflow-wrap: break-word;\r\n    text-align: center;\r\n    background-color: whitesmoke;\r\n  }\r\n`\r\n\r\nclass GraphContentNote extends LitElement {\r\n  constructor() {\r\n    super()\r\n    this.content = \"\"\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <div\r\n        id=\"note-content\"\r\n        class=\"graph-node__note\"\r\n        contenteditable=\"true\"\r\n        @blur=${this.finishContentEdit}\r\n        @paste=${pastePlainText}\r\n        @contextmenu=${this.openContextMenu}\r\n      ></div>\r\n    `\r\n  }\r\n\r\n  static get styles() {\r\n    return styles\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      content: { type: String, reflect: true },\r\n    }\r\n  }\r\n\r\n  get contentElement() {\r\n    return this.shadowRoot.getElementById(\"note-content\")\r\n  }\r\n\r\n  updated() {\r\n    this.contentElement.innerText = this.content\r\n  }\r\n\r\n  finishContentEdit(_e) {\r\n    const prev = this.content\r\n    const next = this.shadowRoot.getElementById(\"note-content\").innerText\r\n\r\n    if (prev != next) {\r\n      this.content = next\r\n      this.dispatchEvent(new CommandEvent(this.createEditCommand(prev, next)))\r\n    }\r\n  }\r\n\r\n  focus() {\r\n    if (this.contentElement != null) {\r\n      this.contentElement.focus()\r\n    } else {\r\n      this.updateComplete.then(() => this.contentElement.focus())\r\n    }\r\n  }\r\n\r\n  openContextMenu(e) {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n\r\n    const menu = realize(html`\r\n      <graph-contextmenu posx=${e.x} posy=${e.y}>\r\n        <graph-contextmenu-item\r\n          .operation=${() => this.parentElement.destroy()}\r\n        >\r\n          Remove\r\n        </graph-contextmenu-item>\r\n      </graph-contextmenu>\r\n    `)\r\n\r\n    document.body.append(...menu.children)\r\n  }\r\n\r\n  createEditCommand(prev, next) {\r\n    const up = () => {\r\n      this.content = next\r\n    }\r\n\r\n    const down = () => {\r\n      this.content = prev\r\n    }\r\n\r\n    return new Command(up, down)\r\n  }\r\n\r\n  toPlainObj() {\r\n    return {\r\n      name: \"graph-content-note\",\r\n      resources: {\r\n        content: this.content,\r\n      },\r\n    }\r\n  }\r\n\r\n  init(data) {\r\n    this.content = data.content\r\n  }\r\n}\r\n\r\nfunction pastePlainText(e) {\r\n  e.preventDefault()\r\n\r\n  const text = e.clipboardData.getData(\"text/plain\")\r\n\r\n  let selection\r\n  if (this.shadowRoot.getSelection != null) {\r\n    // for Chrome\r\n    selection = this.shadowRoot.getSelection()\r\n  } else {\r\n    // for FireFox\r\n    selection = window.getSelection()\r\n    if (selection.anchorNode != e.target) return\r\n  }\r\n\r\n  if (selection.rangeCount != 0) {\r\n    selection.deleteFromDocument()\r\n\r\n    const range = selection.getRangeAt(0)\r\n    range.insertNode(document.createTextNode(text))\r\n  }\r\n}\r\n\r\ncustomElements.define(\"graph-content-note\", GraphContentNote)\r\nexport default GraphContentNote\r\n","import { html, css, LitElement } from \"lit-element\"\r\nimport realize from \"../realize\"\r\n\r\nconst styles = css`\r\n  :host {\r\n    display: block;\r\n  }\r\n\r\n  .graph-node__pattern {\r\n    min-height: 1.8em;\r\n    text-align: center;\r\n    background-color: greenyellow;\r\n  }\r\n`\r\n\r\nclass GraphContentPattern extends LitElement {\r\n  render() {\r\n    return html`\r\n      <div class=\"graph-node__pattern\" @contextmenu=${this.openConetextMenu}>\r\n        ${this.patternData ? this.patternData.name : \"(証)\"}\r\n      </div>\r\n    `\r\n  }\r\n\r\n  static get styles() {\r\n    return styles\r\n  }\r\n\r\n  get patternData() {\r\n    return this.__pattern\r\n  }\r\n  set patternData(value) {\r\n    this.__pattern = value\r\n    this.requestUpdate()\r\n  }\r\n\r\n  openConetextMenu(e) {\r\n    e.stopPropagation()\r\n    e.preventDefault()\r\n\r\n    const template = html`\r\n      <graph-contextmenu posx=${e.x} posy=${e.y}>\r\n        <graph-contextmenu-item\r\n          .operation=${() => this.parentElement.destroy()}\r\n        >\r\n          Remove\r\n        </graph-contextmenu-item>\r\n      </graph-contextmenu>\r\n    `\r\n\r\n    document.body.append(...realize(template).children)\r\n  }\r\n\r\n  toPlainObj() {\r\n    return {\r\n      name: \"graph-content-pattern\",\r\n      resources: {\r\n        patternData: this.patternData,\r\n      },\r\n    }\r\n  }\r\n\r\n  init({ patternData }) {\r\n    this.patternData = patternData\r\n  }\r\n}\r\n\r\ncustomElements.define(\"graph-content-pattern\", GraphContentPattern)\r\nexport default GraphContentPattern\r\n","import { html, css, LitElement } from \"lit-element\"\r\nimport realize from \"../realize.js\"\r\nimport Command from \"../command.js\"\r\nimport CommandEvent from \"../command-event.js\"\r\nimport LOADER from \"../wc-loader.js\"\r\n\r\nlet styles = css`\r\n  :host {\r\n    display: block;\r\n    position: relative;\r\n  }\r\n\r\n  .graph-pane__links-layer {\r\n    pointer-events: none;\r\n\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px;\r\n    width: 0px;\r\n    height: 0px;\r\n  }\r\n\r\n  .graph-pane__links-layer > * {\r\n    pointer-events: auto;\r\n  }\r\n`\r\n\r\nclass GraphLinkList extends LitElement {\r\n  render() {\r\n    return html`\r\n      <div class=\"graph-pane__links-layer\" style=\"overflow: visible\">\r\n        <slot></slot>\r\n      </div>\r\n    `\r\n  }\r\n\r\n  static get styles() {\r\n    return styles\r\n  }\r\n\r\n  static get properties() {\r\n    return {}\r\n  }\r\n\r\n  link(from, to) {\r\n    let fromId, toId\r\n    if (typeof from === \"object\" && typeof to === \"object\") {\r\n      fromId = from.id\r\n      toId = to.id\r\n    } else {\r\n      fromId = from\r\n      toId = to\r\n    }\r\n\r\n    const links = Array.from(this.children)\r\n    if (links.find(x => x.linkFrom == fromId && x.linkTo == toId) != null) {\r\n      return\r\n    }\r\n\r\n    const link = realize(html`\r\n      <graph-link linkFrom=${fromId} linkTo=${toId}> </graph-link>\r\n    `).firstElementChild\r\n\r\n    this.appendChild(link)\r\n    this.dispatchEvent(new CommandEvent(this.createLinkCommand(link)))\r\n  }\r\n\r\n  createLinkCommand(link) {\r\n    const up = () => {\r\n      this.append(link)\r\n    }\r\n\r\n    const down = () => {\r\n      link.remove()\r\n    }\r\n\r\n    return new Command(up, down)\r\n  }\r\n\r\n  toPlainObj() {\r\n    return {\r\n      name: \"graph-link-list\",\r\n      resources: [...this.children].map(x => x.toPlainObj()),\r\n    }\r\n  }\r\n\r\n  static buildTemplates() {\r\n    return html``\r\n  }\r\n\r\n  init(links) {\r\n    this.slot = \"link-layer\"\r\n    this.append(...links.map(x => LOADER.parse(x)))\r\n  }\r\n}\r\n\r\ncustomElements.define(\"graph-link-list\", GraphLinkList)\r\n\r\nexport default GraphLinkList\r\n","import { html, css, LitElement } from \"lit-element\"\r\nimport Command from \"../command.js\"\r\nimport CommandEvent from \"../command-event.js\"\r\n\r\nlet styles = css`\r\n  :host {\r\n    color: white;\r\n    position: absolute;\r\n  }\r\n  svg {\r\n    overflow: visible;\r\n    pointer-events: stroke;\r\n  }\r\n\r\n  g#graph-line-group {\r\n    --color: black;\r\n    fill: var(--color);\r\n    stroke: var(--color);\r\n  }\r\n  g#graph-line-group:hover {\r\n    --color: red;\r\n  }\r\n`\r\n\r\nclass GraphLink extends LitElement {\r\n  constructor() {\r\n    super()\r\n    this.strokeWidth = 2\r\n    this.startPos = { x: 0, y: 0 }\r\n    this.endPos = { x: 0, y: 0 }\r\n\r\n    this.fromObs = this.makeObserver()\r\n    this.toObs = this.makeObserver()\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <svg>\r\n        <g id=\"graph-line-group\">\r\n          <marker\r\n            id=\"graph-arrow-marker\"\r\n            viewBox=\"-5 -5 10 10\"\r\n            orient=\"auto\"\r\n            refX=\"0\"\r\n            refY=\"0\"\r\n            markerUnits=\"strokeWidth\"\r\n            markerWidth=${this.markerWidth}\r\n            markerHeight=${this.markerWidth}\r\n          >\r\n            <polygon points=\"-5,-5 5,0 -5,5\" stroke=\"none\" />\r\n          </marker>\r\n          <line\r\n            stroke-width=${this.strokeWidth}\r\n            marker-end=\"url(#graph-arrow-marker)\"\r\n            x1=${this.startPos.x}\r\n            y1=${this.startPos.y}\r\n            x2=${this.endPos.x}\r\n            y2=${this.endPos.y}\r\n            @click=${this.handleClick}\r\n          />\r\n        </g>\r\n      </svg>\r\n    `\r\n  }\r\n\r\n  static get styles() {\r\n    return styles\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      linkFrom: { type: String, reflect: true },\r\n      linkTo: { type: String, reflect: true },\r\n      strokeWidth: { type: Number, reflect: true },\r\n    }\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.setPoints()\r\n\r\n    this.fromObs.observeById(this.linkFrom)\r\n    this.toObs.observeById(this.linkTo)\r\n  }\r\n\r\n  attributeChangedCallback(...args) {\r\n    super.attributeChangedCallback(...args)\r\n\r\n    let [attrName, _o, n] = args\r\n\r\n    if (!this.isConnected) {\r\n      return\r\n    }\r\n\r\n    const callback = obs => obs.disconnect()\r\n    let changed = false\r\n\r\n    if (attrName == \"linkfrom\") {\r\n      this.fromObs.observeById(n, callback)\r\n      changed = true\r\n    }\r\n    if (attrName == \"linkto\") {\r\n      this.toObs.observeById(n, callback)\r\n      changed = true\r\n    }\r\n\r\n    if (changed) {\r\n      this.setPoints()\r\n    }\r\n  }\r\n\r\n  get markerWidth() {\r\n    return 3 * this.strokeWidth\r\n  }\r\n\r\n  setPoints() {\r\n    if (this.linkFrom == null || this.linkTo == null) {\r\n      return\r\n    }\r\n\r\n    const start = document.getElementById(this.linkFrom)\r\n    const end = document.getElementById(this.linkTo)\r\n\r\n    if (start == null || end == null) {\r\n      return\r\n    }\r\n\r\n    const line = [\r\n      { x: start.offsetLeft, y: start.offsetTop },\r\n      { x: end.offsetLeft, y: end.offsetTop },\r\n    ]\r\n\r\n    const edge = getIntersectedEdge(line, getEdges(end))\r\n\r\n    if (edge != null) {\r\n      const pos = {\r\n        start: {\r\n          x: start.offsetLeft,\r\n          y: start.offsetTop,\r\n        },\r\n        end: getIntersectPoint(line, edge),\r\n      }\r\n\r\n      const theta = Math.atan2(pos.end.y - pos.start.y, pos.end.x - pos.start.x)\r\n\r\n      const modifier = {\r\n        x: (this.markerWidth / 2) * this.strokeWidth * Math.cos(theta),\r\n        y: (this.markerWidth / 2) * this.strokeWidth * Math.sin(theta),\r\n      }\r\n\r\n      Object.assign(pos, {\r\n        end: {\r\n          x: pos.end.x - modifier.x,\r\n          y: pos.end.y - modifier.y,\r\n        },\r\n      })\r\n\r\n      this.applyLinePos(pos)\r\n      this.requestUpdate()\r\n      this.style.setProperty(\"display\", \"block\")\r\n    } else {\r\n      this.style.setProperty(\"display\", \"none\")\r\n    }\r\n  }\r\n\r\n  applyLinePos({ start, end }) {\r\n    this.startPos = start\r\n    this.endPos = end\r\n  }\r\n\r\n  makeObserver() {\r\n    return new NodeMoveObserver(_mutations => {\r\n      this.setPoints()\r\n    })\r\n  }\r\n\r\n  handleClick(e) {\r\n    e.stopPropagation()\r\n    this.destroy()\r\n  }\r\n\r\n  destroy() {\r\n    this.dispatchEvent(new CommandEvent(this.createDestroyCommand()))\r\n    this.remove()\r\n  }\r\n\r\n  createDestroyCommand() {\r\n    const editor = this.closest(\"graph-editor\")\r\n    const linkLayer = editor.querySelector(\"[slot=link-layer]\")\r\n\r\n    const up = () => {\r\n      this.remove()\r\n    }\r\n\r\n    const down = () => {\r\n      linkLayer.append(this)\r\n    }\r\n\r\n    return new Command(up, down)\r\n  }\r\n\r\n  toPlainObj() {\r\n    return {\r\n      name: \"graph-link\",\r\n      resources: {\r\n        from: this.linkFrom,\r\n        to: this.linkTo,\r\n        strokeWidth: this.strokeWidth,\r\n      },\r\n    }\r\n  }\r\n\r\n  init({ from, to, strokeWidth }) {\r\n    this.linkFrom = from\r\n    this.linkTo = to\r\n    this.strokeWidth = strokeWidth\r\n  }\r\n}\r\n\r\nclass NodeMoveObserver extends MutationObserver {\r\n  observe(target) {\r\n    super.observe(target, {\r\n      attributes: true,\r\n      attributeFilter: [\"posx\", \"posy\"],\r\n      childList: true,\r\n      subtree: true,\r\n    })\r\n  }\r\n\r\n  observeById(id, failCallback) {\r\n    const element = document.getElementById(id)\r\n    if (element != null) {\r\n      this.observe(element)\r\n      return true\r\n    } else {\r\n      if (failCallback) failCallback(this)\r\n      return false\r\n    }\r\n  }\r\n}\r\n\r\nfunction getIntersectedEdge(line, edges) {\r\n  if (isIntersected(line, edges.top)) {\r\n    return edges.top\r\n  } else if (isIntersected(line, edges.left)) {\r\n    return edges.left\r\n  } else if (isIntersected(line, edges.bottom)) {\r\n    return edges.bottom\r\n  } else if (isIntersected(line, edges.right)) {\r\n    return edges.right\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nfunction isIntersected([a, b], [c, d]) {\r\n  const ta = (c.x - d.x) * (a.y - c.y) + (c.y - d.y) * (c.x - a.x)\r\n  const tb = (c.x - d.x) * (b.y - c.y) + (c.y - d.y) * (c.x - b.x)\r\n  const tc = (a.x - b.x) * (c.y - a.y) + (a.y - b.y) * (a.x - c.x)\r\n  const td = (a.x - b.x) * (d.y - a.y) + (a.y - b.y) * (a.x - d.x)\r\n\r\n  return tc * td <= 0 && ta * tb <= 0\r\n}\r\n\r\nfunction getEdges(e) {\r\n  return {\r\n    top: [\r\n      {\r\n        x: e.offsetLeft - e.offsetWidth / 2,\r\n        y: e.offsetTop - e.offsetHeight / 2,\r\n      },\r\n      {\r\n        x: e.offsetLeft - e.offsetWidth / 2 + e.offsetWidth,\r\n        y: e.offsetTop - e.offsetHeight / 2,\r\n      },\r\n    ],\r\n    left: [\r\n      {\r\n        x: e.offsetLeft - e.offsetWidth / 2,\r\n        y: e.offsetTop - e.offsetHeight / 2,\r\n      },\r\n      {\r\n        x: e.offsetLeft - e.offsetWidth / 2,\r\n        y: e.offsetTop - e.offsetHeight / 2 + e.offsetHeight,\r\n      },\r\n    ],\r\n    bottom: [\r\n      {\r\n        x: e.offsetLeft - e.offsetWidth / 2,\r\n        y: e.offsetTop - e.offsetHeight / 2 + e.offsetHeight,\r\n      },\r\n      {\r\n        x: e.offsetLeft - e.offsetWidth / 2 + e.offsetWidth,\r\n        y: e.offsetTop - e.offsetHeight / 2 + e.offsetHeight,\r\n      },\r\n    ],\r\n    right: [\r\n      {\r\n        x: e.offsetLeft - e.offsetWidth / 2 + e.offsetWidth,\r\n        y: e.offsetTop - e.offsetHeight / 2,\r\n      },\r\n      {\r\n        x: e.offsetLeft - e.offsetWidth / 2 + e.offsetWidth,\r\n        y: e.offsetTop - e.offsetHeight / 2 + e.offsetHeight,\r\n      },\r\n    ],\r\n  }\r\n}\r\n\r\nfunction getIntersectPoint([a, b], [c, d]) {\r\n  const vca = { x: a.x - c.x, y: a.y - c.y }\r\n  const vab = { x: b.x - a.x, y: b.y - a.y }\r\n  const vcd = { x: d.x - c.x, y: d.y - c.y }\r\n\r\n  const ip = vab.x * vcd.y - vab.y * vcd.x\r\n\r\n  const ratio = (vca.y * vcd.x - vca.x * vcd.y) / ip\r\n\r\n  return {\r\n    x: vab.x * ratio + a.x,\r\n    y: vab.y * ratio + a.y,\r\n  }\r\n}\r\n\r\ncustomElements.define(\"graph-link\", GraphLink)\r\nexport default GraphLink\r\n","import { html, css, LitElement } from \"lit-element\"\r\n\r\nconst styles = css`\r\n  li {\r\n    list-style-type: none;\r\n    padding: 0.1em 1em;\r\n  }\r\n\r\n  li:hover {\r\n    background-color: #e0e0e0;\r\n  }\r\n`\r\n\r\nclass GraphContextMenuItem extends LitElement {\r\n  render() {\r\n    return html`\r\n      <li @click=${this.handleClick}>\r\n        <slot></slot>\r\n      </li>\r\n    `\r\n  }\r\n\r\n  static get styles() {\r\n    return styles\r\n  }\r\n\r\n  handleClick() {\r\n    this.closest(\"graph-contextmenu\").do(this.operation())\r\n  }\r\n}\r\n\r\ncustomElements.define(\"graph-contextmenu-item\", GraphContextMenuItem)\r\nexport default GraphContextMenuItem\r\n","import { html, css, LitElement } from \"lit-element\"\r\n\r\nconst styles = css`\r\n  :host {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n  }\r\n\r\n  ::slotted(*) {\r\n    background-color: red;\r\n  }\r\n\r\n  #graph-contextmenu {\r\n    border: solid 1px;\r\n    min-width: 120px;\r\n    max-width: 200px;\r\n    background-color: whitesmoke;\r\n    word-wrap: break-all;\r\n    box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.15);\r\n  }\r\n\r\n  #graph-contextmenu:hover {\r\n    box-shadow: 0px 10px 20px 0px rgba(0, 0, 0, 0.15);\r\n    z-index: 1;\r\n  }\r\n\r\n  ul {\r\n    padding: 0.1em;\r\n    margin: 0.5em 0;\r\n  }\r\n`\r\n\r\nclass GraphContextMenu extends LitElement {\r\n  render() {\r\n    return html`\r\n      <div id=\"graph-contextmenu\" @blur=${this.handleBlur} tabindex=\"-1\">\r\n        <ul>\r\n          <slot></slot>\r\n        </ul>\r\n      </div>\r\n    `\r\n  }\r\n\r\n  static get styles() {\r\n    return styles\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      posx: { type: Number, reflex: true },\r\n      posy: { type: Number, reflex: true },\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback()\r\n\r\n    this.updateComplete.then(() => {\r\n      const menu = this.shadowRoot.getElementById(\"graph-contextmenu\")\r\n\r\n      menu.addEventListener(\"blur\", this.handleBlur)\r\n      menu.focus()\r\n\r\n      this.style.top = `${xOrReflexed(\r\n        this.posy,\r\n        this.clientHeight,\r\n        window.innerHeight\r\n      )}px`\r\n      this.style.left = `${xOrReflexed(\r\n        this.posx,\r\n        this.clientWidth,\r\n        window.innerWidth\r\n      )}px`\r\n    })\r\n  }\r\n\r\n  blur() {\r\n    this.remove()\r\n  }\r\n\r\n  handleBlur(_e) {\r\n    this.remove()\r\n  }\r\n\r\n  do() {\r\n    this.remove()\r\n  }\r\n}\r\n\r\nfunction xOrReflexed(x, span, limit) {\r\n  return x + span < limit ? x : x - span\r\n}\r\n\r\ncustomElements.define(\"graph-contextmenu\", GraphContextMenu)\r\n\r\nexport default GraphContextMenu\r\n","import { h } from \"hyperapp\"\r\n\r\nimport promptSaveAs from \"../../prompt-save-as.js\"\r\nimport showDialogAsync from \"../../show-dialog-async.js\"\r\n\r\nconst Menu = () => (state, actions) => (\r\n  <div class=\"menubar pure-menu pure-menu-horizontal\">\r\n    {renderIf(\r\n      state.menuPath.length > 0,\r\n      <div\r\n        style=\"position: fixed; top: 0; bottom: 0; left: 0; right: 0;\"\r\n        onclick={e => {\r\n          e.stopPropagation()\r\n          e.preventDefault()\r\n\r\n          actions.closeMenu()\r\n        }}\r\n      />\r\n    )}\r\n    <ul class=\"menubar__list pure-menu-list\">\r\n      <SubMenu\r\n        name=\"File\"\r\n        displayName=\"ファイル\"\r\n        depth={0}\r\n        path={state.menuPath}\r\n        setPath={menuPath => actions.setMenuPath({ menuPath })}\r\n      >\r\n        <MenuItem\r\n          menuAction={async () => {\r\n            actions.saveData({ saveData: await state.db.getAll(\"saveData\") })\r\n\r\n            const { title } = await showDialogAsync(\"load-dialog\")\r\n\r\n            const { data } = await state.db.get(\"saveData\", title)\r\n\r\n            if (data) {\r\n              actions.load({ data })\r\n            }\r\n\r\n            actions.closeMenu()\r\n          }}\r\n        >\r\n          開く\r\n        </MenuItem>\r\n        <MenuItem\r\n          menuAction={async () => {\r\n            const { file } = await showDialogAsync(\"import-dialog\")\r\n\r\n            actions.closeMenu()\r\n\r\n            const reader = new FileReader()\r\n            reader.onload = ({ target }) =>\r\n              actions.import({ json: target.result })\r\n            reader.readAsText(file)\r\n          }}\r\n        >\r\n          インポート\r\n        </MenuItem>\r\n        <hr />\r\n        <MenuItem\r\n          menuAction={async () => {\r\n            await actions.save({\r\n              data: document.getElementById(\"graph-editor\").toPlainObj(),\r\n            })\r\n            actions.closeMenu()\r\n          }}\r\n        >\r\n          保存\r\n        </MenuItem>\r\n        <MenuItem\r\n          menuAction={async () => {\r\n            const title = await promptSaveAs()\r\n\r\n            actions.setTitle({ title })\r\n            actions.save({\r\n              data: document.getElementById(\"graph-editor\").toPlainObj(),\r\n            })\r\n            actions.closeMenu()\r\n          }}\r\n        >\r\n          名前を付けて保存\r\n        </MenuItem>\r\n        <MenuItem\r\n          menuAction={async () => {\r\n            const { filename } = await showDialogAsync(\"export-dialog\")\r\n\r\n            actions.closeMenu()\r\n            actions.export({ name: filename })\r\n          }}\r\n        >\r\n          エクスポート\r\n        </MenuItem>\r\n      </SubMenu>\r\n      <SubMenu\r\n        name=\"Edit\"\r\n        displayName=\"編集\"\r\n        depth={0}\r\n        path={state.menuPath}\r\n        setPath={menuPath => actions.setMenuPath({ menuPath })}\r\n      >\r\n        <MenuItem\r\n          menuAction={async () => {\r\n            actions.undo()\r\n            actions.closeMenu()\r\n          }}\r\n        >\r\n          元に戻す\r\n        </MenuItem>\r\n        <MenuItem\r\n          menuAction={async () => {\r\n            actions.redo()\r\n            actions.closeMenu()\r\n          }}\r\n        >\r\n          やりなおし\r\n        </MenuItem>\r\n      </SubMenu>\r\n    </ul>\r\n  </div>\r\n)\r\n\r\nconst SubMenu = (\r\n  { name, displayName, depth, klass, path, setPath },\r\n  children\r\n) => (\r\n  <li\r\n    class={classcat(\r\n      \"pure-menu-item\",\r\n      \"pure-menu-has-children\",\r\n      { \"pure-menu-active\": path[depth] === name },\r\n      klass\r\n    )}\r\n  >\r\n    <span\r\n      class=\"menubar__item pure-menu-link\"\r\n      onclick={e => {\r\n        e.stopPropagation()\r\n        e.preventDefault()\r\n\r\n        if (path[depth] === name) {\r\n          const menuPath = path.slice(0, depth)\r\n          setPath(menuPath)\r\n          return\r\n        }\r\n\r\n        const menuPath = path.slice(0, depth).concat(name)\r\n        setPath(menuPath)\r\n      }}\r\n    >\r\n      {displayName || name}\r\n    </span>\r\n    <ul class=\"menubar__submenu pure-menu-children\">{children}</ul>\r\n  </li>\r\n)\r\n\r\nconst MenuItem = ({ menuAction, klass }, children) => (\r\n  <li class={classcat(\"pure-menu-item\", klass)}>\r\n    <span\r\n      class=\"menubar__item pure-menu-link\"\r\n      onclick={async e => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n\r\n        try {\r\n          await menuAction(e)\r\n        } catch (error) {\r\n          if (error.name == \"DialogCancelError\") {\r\n            return\r\n          }\r\n\r\n          throw error\r\n        }\r\n      }}\r\n    >\r\n      {children}\r\n    </span>\r\n  </li>\r\n)\r\n\r\nfunction classcat(...a) {\r\n  return flatAll(...a).join(\" \")\r\n}\r\n\r\nfunction flatAll(...a) {\r\n  return a.flatMap(x => {\r\n    if (typeof x == \"string\") {\r\n      return x\r\n    }\r\n\r\n    if (Array.isArray(x)) {\r\n      return flatAll(...x)\r\n    }\r\n\r\n    if (typeof x == \"object\") {\r\n      return Array.from(Object.entries(x))\r\n        .filter(([_k, v]) => v)\r\n        .map(([k]) => k)\r\n    }\r\n\r\n    return []\r\n  })\r\n}\r\n\r\nfunction renderIf(cond, view, otherwise) {\r\n  if (cond) {\r\n    return view\r\n  } else {\r\n    return otherwise\r\n  }\r\n}\r\n\r\nexport default Menu\r\n","// nb. This is for IE10 and lower _only_.\nvar supportCustomEvent = window.CustomEvent;\nif (!supportCustomEvent || typeof supportCustomEvent === 'object') {\n  supportCustomEvent = function CustomEvent(event, x) {\n    x = x || {};\n    var ev = document.createEvent('CustomEvent');\n    ev.initCustomEvent(event, !!x.bubbles, !!x.cancelable, x.detail || null);\n    return ev;\n  };\n  supportCustomEvent.prototype = window.Event.prototype;\n}\n\n/**\n * @param {Element} el to check for stacking context\n * @return {boolean} whether this el or its parents creates a stacking context\n */\nfunction createsStackingContext(el) {\n  while (el && el !== document.body) {\n    var s = window.getComputedStyle(el);\n    var invalid = function(k, ok) {\n      return !(s[k] === undefined || s[k] === ok);\n    };\n    \n    if (s.opacity < 1 ||\n        invalid('zIndex', 'auto') ||\n        invalid('transform', 'none') ||\n        invalid('mixBlendMode', 'normal') ||\n        invalid('filter', 'none') ||\n        invalid('perspective', 'none') ||\n        s['isolation'] === 'isolate' ||\n        s.position === 'fixed' ||\n        s.webkitOverflowScrolling === 'touch') {\n      return true;\n    }\n    el = el.parentElement;\n  }\n  return false;\n}\n\n/**\n * Finds the nearest <dialog> from the passed element.\n *\n * @param {Element} el to search from\n * @return {HTMLDialogElement} dialog found\n */\nfunction findNearestDialog(el) {\n  while (el) {\n    if (el.localName === 'dialog') {\n      return /** @type {HTMLDialogElement} */ (el);\n    }\n    el = el.parentElement;\n  }\n  return null;\n}\n\n/**\n * Blur the specified element, as long as it's not the HTML body element.\n * This works around an IE9/10 bug - blurring the body causes Windows to\n * blur the whole application.\n *\n * @param {Element} el to blur\n */\nfunction safeBlur(el) {\n  if (el && el.blur && el !== document.body) {\n    el.blur();\n  }\n}\n\n/**\n * @param {!NodeList} nodeList to search\n * @param {Node} node to find\n * @return {boolean} whether node is inside nodeList\n */\nfunction inNodeList(nodeList, node) {\n  for (var i = 0; i < nodeList.length; ++i) {\n    if (nodeList[i] === node) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {HTMLFormElement} el to check\n * @return {boolean} whether this form has method=\"dialog\"\n */\nfunction isFormMethodDialog(el) {\n  if (!el || !el.hasAttribute('method')) {\n    return false;\n  }\n  return el.getAttribute('method').toLowerCase() === 'dialog';\n}\n\n/**\n * @param {!HTMLDialogElement} dialog to upgrade\n * @constructor\n */\nfunction dialogPolyfillInfo(dialog) {\n  this.dialog_ = dialog;\n  this.replacedStyleTop_ = false;\n  this.openAsModal_ = false;\n\n  // Set a11y role. Browsers that support dialog implicitly know this already.\n  if (!dialog.hasAttribute('role')) {\n    dialog.setAttribute('role', 'dialog');\n  }\n\n  dialog.show = this.show.bind(this);\n  dialog.showModal = this.showModal.bind(this);\n  dialog.close = this.close.bind(this);\n\n  if (!('returnValue' in dialog)) {\n    dialog.returnValue = '';\n  }\n\n  if ('MutationObserver' in window) {\n    var mo = new MutationObserver(this.maybeHideModal.bind(this));\n    mo.observe(dialog, {attributes: true, attributeFilter: ['open']});\n  } else {\n    // IE10 and below support. Note that DOMNodeRemoved etc fire _before_ removal. They also\n    // seem to fire even if the element was removed as part of a parent removal. Use the removed\n    // events to force downgrade (useful if removed/immediately added).\n    var removed = false;\n    var cb = function() {\n      removed ? this.downgradeModal() : this.maybeHideModal();\n      removed = false;\n    }.bind(this);\n    var timeout;\n    var delayModel = function(ev) {\n      if (ev.target !== dialog) { return; }  // not for a child element\n      var cand = 'DOMNodeRemoved';\n      removed |= (ev.type.substr(0, cand.length) === cand);\n      window.clearTimeout(timeout);\n      timeout = window.setTimeout(cb, 0);\n    };\n    ['DOMAttrModified', 'DOMNodeRemoved', 'DOMNodeRemovedFromDocument'].forEach(function(name) {\n      dialog.addEventListener(name, delayModel);\n    });\n  }\n  // Note that the DOM is observed inside DialogManager while any dialog\n  // is being displayed as a modal, to catch modal removal from the DOM.\n\n  Object.defineProperty(dialog, 'open', {\n    set: this.setOpen.bind(this),\n    get: dialog.hasAttribute.bind(dialog, 'open')\n  });\n\n  this.backdrop_ = document.createElement('div');\n  this.backdrop_.className = 'backdrop';\n  this.backdrop_.addEventListener('click', this.backdropClick_.bind(this));\n}\n\ndialogPolyfillInfo.prototype = {\n\n  get dialog() {\n    return this.dialog_;\n  },\n\n  /**\n   * Maybe remove this dialog from the modal top layer. This is called when\n   * a modal dialog may no longer be tenable, e.g., when the dialog is no\n   * longer open or is no longer part of the DOM.\n   */\n  maybeHideModal: function() {\n    if (this.dialog_.hasAttribute('open') && document.body.contains(this.dialog_)) { return; }\n    this.downgradeModal();\n  },\n\n  /**\n   * Remove this dialog from the modal top layer, leaving it as a non-modal.\n   */\n  downgradeModal: function() {\n    if (!this.openAsModal_) { return; }\n    this.openAsModal_ = false;\n    this.dialog_.style.zIndex = '';\n\n    // This won't match the native <dialog> exactly because if the user set top on a centered\n    // polyfill dialog, that top gets thrown away when the dialog is closed. Not sure it's\n    // possible to polyfill this perfectly.\n    if (this.replacedStyleTop_) {\n      this.dialog_.style.top = '';\n      this.replacedStyleTop_ = false;\n    }\n\n    // Clear the backdrop and remove from the manager.\n    this.backdrop_.parentNode && this.backdrop_.parentNode.removeChild(this.backdrop_);\n    dialogPolyfill.dm.removeDialog(this);\n  },\n\n  /**\n   * @param {boolean} value whether to open or close this dialog\n   */\n  setOpen: function(value) {\n    if (value) {\n      this.dialog_.hasAttribute('open') || this.dialog_.setAttribute('open', '');\n    } else {\n      this.dialog_.removeAttribute('open');\n      this.maybeHideModal();  // nb. redundant with MutationObserver\n    }\n  },\n\n  /**\n   * Handles clicks on the fake .backdrop element, redirecting them as if\n   * they were on the dialog itself.\n   *\n   * @param {!Event} e to redirect\n   */\n  backdropClick_: function(e) {\n    if (!this.dialog_.hasAttribute('tabindex')) {\n      // Clicking on the backdrop should move the implicit cursor, even if dialog cannot be\n      // focused. Create a fake thing to focus on. If the backdrop was _before_ the dialog, this\n      // would not be needed - clicks would move the implicit cursor there.\n      var fake = document.createElement('div');\n      this.dialog_.insertBefore(fake, this.dialog_.firstChild);\n      fake.tabIndex = -1;\n      fake.focus();\n      this.dialog_.removeChild(fake);\n    } else {\n      this.dialog_.focus();\n    }\n\n    var redirectedEvent = document.createEvent('MouseEvents');\n    redirectedEvent.initMouseEvent(e.type, e.bubbles, e.cancelable, window,\n        e.detail, e.screenX, e.screenY, e.clientX, e.clientY, e.ctrlKey,\n        e.altKey, e.shiftKey, e.metaKey, e.button, e.relatedTarget);\n    this.dialog_.dispatchEvent(redirectedEvent);\n    e.stopPropagation();\n  },\n\n  /**\n   * Focuses on the first focusable element within the dialog. This will always blur the current\n   * focus, even if nothing within the dialog is found.\n   */\n  focus_: function() {\n    // Find element with `autofocus` attribute, or fall back to the first form/tabindex control.\n    var target = this.dialog_.querySelector('[autofocus]:not([disabled])');\n    if (!target && this.dialog_.tabIndex >= 0) {\n      target = this.dialog_;\n    }\n    if (!target) {\n      // Note that this is 'any focusable area'. This list is probably not exhaustive, but the\n      // alternative involves stepping through and trying to focus everything.\n      var opts = ['button', 'input', 'keygen', 'select', 'textarea'];\n      var query = opts.map(function(el) {\n        return el + ':not([disabled])';\n      });\n      // TODO(samthor): tabindex values that are not numeric are not focusable.\n      query.push('[tabindex]:not([disabled]):not([tabindex=\"\"])');  // tabindex != \"\", not disabled\n      target = this.dialog_.querySelector(query.join(', '));\n    }\n    safeBlur(document.activeElement);\n    target && target.focus();\n  },\n\n  /**\n   * Sets the zIndex for the backdrop and dialog.\n   *\n   * @param {number} dialogZ\n   * @param {number} backdropZ\n   */\n  updateZIndex: function(dialogZ, backdropZ) {\n    if (dialogZ < backdropZ) {\n      throw new Error('dialogZ should never be < backdropZ');\n    }\n    this.dialog_.style.zIndex = dialogZ;\n    this.backdrop_.style.zIndex = backdropZ;\n  },\n\n  /**\n   * Shows the dialog. If the dialog is already open, this does nothing.\n   */\n  show: function() {\n    if (!this.dialog_.open) {\n      this.setOpen(true);\n      this.focus_();\n    }\n  },\n\n  /**\n   * Show this dialog modally.\n   */\n  showModal: function() {\n    if (this.dialog_.hasAttribute('open')) {\n      throw new Error('Failed to execute \\'showModal\\' on dialog: The element is already open, and therefore cannot be opened modally.');\n    }\n    if (!document.body.contains(this.dialog_)) {\n      throw new Error('Failed to execute \\'showModal\\' on dialog: The element is not in a Document.');\n    }\n    if (!dialogPolyfill.dm.pushDialog(this)) {\n      throw new Error('Failed to execute \\'showModal\\' on dialog: There are too many open modal dialogs.');\n    }\n\n    if (createsStackingContext(this.dialog_.parentElement)) {\n      console.warn('A dialog is being shown inside a stacking context. ' +\n          'This may cause it to be unusable. For more information, see this link: ' +\n          'https://github.com/GoogleChrome/dialog-polyfill/#stacking-context');\n    }\n\n    this.setOpen(true);\n    this.openAsModal_ = true;\n\n    // Optionally center vertically, relative to the current viewport.\n    if (dialogPolyfill.needsCentering(this.dialog_)) {\n      dialogPolyfill.reposition(this.dialog_);\n      this.replacedStyleTop_ = true;\n    } else {\n      this.replacedStyleTop_ = false;\n    }\n\n    // Insert backdrop.\n    this.dialog_.parentNode.insertBefore(this.backdrop_, this.dialog_.nextSibling);\n\n    // Focus on whatever inside the dialog.\n    this.focus_();\n  },\n\n  /**\n   * Closes this HTMLDialogElement. This is optional vs clearing the open\n   * attribute, however this fires a 'close' event.\n   *\n   * @param {string=} opt_returnValue to use as the returnValue\n   */\n  close: function(opt_returnValue) {\n    if (!this.dialog_.hasAttribute('open')) {\n      throw new Error('Failed to execute \\'close\\' on dialog: The element does not have an \\'open\\' attribute, and therefore cannot be closed.');\n    }\n    this.setOpen(false);\n\n    // Leave returnValue untouched in case it was set directly on the element\n    if (opt_returnValue !== undefined) {\n      this.dialog_.returnValue = opt_returnValue;\n    }\n\n    // Triggering \"close\" event for any attached listeners on the <dialog>.\n    var closeEvent = new supportCustomEvent('close', {\n      bubbles: false,\n      cancelable: false\n    });\n    this.dialog_.dispatchEvent(closeEvent);\n  }\n\n};\n\nvar dialogPolyfill = {};\n\ndialogPolyfill.reposition = function(element) {\n  var scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n  var topValue = scrollTop + (window.innerHeight - element.offsetHeight) / 2;\n  element.style.top = Math.max(scrollTop, topValue) + 'px';\n};\n\ndialogPolyfill.isInlinePositionSetByStylesheet = function(element) {\n  for (var i = 0; i < document.styleSheets.length; ++i) {\n    var styleSheet = document.styleSheets[i];\n    var cssRules = null;\n    // Some browsers throw on cssRules.\n    try {\n      cssRules = styleSheet.cssRules;\n    } catch (e) {}\n    if (!cssRules) { continue; }\n    for (var j = 0; j < cssRules.length; ++j) {\n      var rule = cssRules[j];\n      var selectedNodes = null;\n      // Ignore errors on invalid selector texts.\n      try {\n        selectedNodes = document.querySelectorAll(rule.selectorText);\n      } catch(e) {}\n      if (!selectedNodes || !inNodeList(selectedNodes, element)) {\n        continue;\n      }\n      var cssTop = rule.style.getPropertyValue('top');\n      var cssBottom = rule.style.getPropertyValue('bottom');\n      if ((cssTop && cssTop !== 'auto') || (cssBottom && cssBottom !== 'auto')) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ndialogPolyfill.needsCentering = function(dialog) {\n  var computedStyle = window.getComputedStyle(dialog);\n  if (computedStyle.position !== 'absolute') {\n    return false;\n  }\n\n  // We must determine whether the top/bottom specified value is non-auto.  In\n  // WebKit/Blink, checking computedStyle.top == 'auto' is sufficient, but\n  // Firefox returns the used value. So we do this crazy thing instead: check\n  // the inline style and then go through CSS rules.\n  if ((dialog.style.top !== 'auto' && dialog.style.top !== '') ||\n      (dialog.style.bottom !== 'auto' && dialog.style.bottom !== '')) {\n    return false;\n  }\n  return !dialogPolyfill.isInlinePositionSetByStylesheet(dialog);\n};\n\n/**\n * @param {!Element} element to force upgrade\n */\ndialogPolyfill.forceRegisterDialog = function(element) {\n  if (window.HTMLDialogElement || element.showModal) {\n    console.warn('This browser already supports <dialog>, the polyfill ' +\n        'may not work correctly', element);\n  }\n  if (element.localName !== 'dialog') {\n    throw new Error('Failed to register dialog: The element is not a dialog.');\n  }\n  new dialogPolyfillInfo(/** @type {!HTMLDialogElement} */ (element));\n};\n\n/**\n * @param {!Element} element to upgrade, if necessary\n */\ndialogPolyfill.registerDialog = function(element) {\n  if (!element.showModal) {\n    dialogPolyfill.forceRegisterDialog(element);\n  }\n};\n\n/**\n * @constructor\n */\ndialogPolyfill.DialogManager = function() {\n  /** @type {!Array<!dialogPolyfillInfo>} */\n  this.pendingDialogStack = [];\n\n  var checkDOM = this.checkDOM_.bind(this);\n\n  // The overlay is used to simulate how a modal dialog blocks the document.\n  // The blocking dialog is positioned on top of the overlay, and the rest of\n  // the dialogs on the pending dialog stack are positioned below it. In the\n  // actual implementation, the modal dialog stacking is controlled by the\n  // top layer, where z-index has no effect.\n  this.overlay = document.createElement('div');\n  this.overlay.className = '_dialog_overlay';\n  this.overlay.addEventListener('click', function(e) {\n    this.forwardTab_ = undefined;\n    e.stopPropagation();\n    checkDOM([]);  // sanity-check DOM\n  }.bind(this));\n\n  this.handleKey_ = this.handleKey_.bind(this);\n  this.handleFocus_ = this.handleFocus_.bind(this);\n\n  this.zIndexLow_ = 100000;\n  this.zIndexHigh_ = 100000 + 150;\n\n  this.forwardTab_ = undefined;\n\n  if ('MutationObserver' in window) {\n    this.mo_ = new MutationObserver(function(records) {\n      var removed = [];\n      records.forEach(function(rec) {\n        for (var i = 0, c; c = rec.removedNodes[i]; ++i) {\n          if (!(c instanceof Element)) {\n            continue;\n          } else if (c.localName === 'dialog') {\n            removed.push(c);\n          }\n          removed = removed.concat(c.querySelectorAll('dialog'));\n        }\n      });\n      removed.length && checkDOM(removed);\n    });\n  }\n};\n\n/**\n * Called on the first modal dialog being shown. Adds the overlay and related\n * handlers.\n */\ndialogPolyfill.DialogManager.prototype.blockDocument = function() {\n  document.documentElement.addEventListener('focus', this.handleFocus_, true);\n  document.addEventListener('keydown', this.handleKey_);\n  this.mo_ && this.mo_.observe(document, {childList: true, subtree: true});\n};\n\n/**\n * Called on the first modal dialog being removed, i.e., when no more modal\n * dialogs are visible.\n */\ndialogPolyfill.DialogManager.prototype.unblockDocument = function() {\n  document.documentElement.removeEventListener('focus', this.handleFocus_, true);\n  document.removeEventListener('keydown', this.handleKey_);\n  this.mo_ && this.mo_.disconnect();\n};\n\n/**\n * Updates the stacking of all known dialogs.\n */\ndialogPolyfill.DialogManager.prototype.updateStacking = function() {\n  var zIndex = this.zIndexHigh_;\n\n  for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {\n    dpi.updateZIndex(--zIndex, --zIndex);\n    if (i === 0) {\n      this.overlay.style.zIndex = --zIndex;\n    }\n  }\n\n  // Make the overlay a sibling of the dialog itself.\n  var last = this.pendingDialogStack[0];\n  if (last) {\n    var p = last.dialog.parentNode || document.body;\n    p.appendChild(this.overlay);\n  } else if (this.overlay.parentNode) {\n    this.overlay.parentNode.removeChild(this.overlay);\n  }\n};\n\n/**\n * @param {Element} candidate to check if contained or is the top-most modal dialog\n * @return {boolean} whether candidate is contained in top dialog\n */\ndialogPolyfill.DialogManager.prototype.containedByTopDialog_ = function(candidate) {\n  while (candidate = findNearestDialog(candidate)) {\n    for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {\n      if (dpi.dialog === candidate) {\n        return i === 0;  // only valid if top-most\n      }\n    }\n    candidate = candidate.parentElement;\n  }\n  return false;\n};\n\ndialogPolyfill.DialogManager.prototype.handleFocus_ = function(event) {\n  if (this.containedByTopDialog_(event.target)) { return; }\n\n  if (document.activeElement === document.documentElement) { return; }\n\n  event.preventDefault();\n  event.stopPropagation();\n  safeBlur(/** @type {Element} */ (event.target));\n\n  if (this.forwardTab_ === undefined) { return; }  // move focus only from a tab key\n\n  var dpi = this.pendingDialogStack[0];\n  var dialog = dpi.dialog;\n  var position = dialog.compareDocumentPosition(event.target);\n  if (position & Node.DOCUMENT_POSITION_PRECEDING) {\n    if (this.forwardTab_) {\n      // forward\n      dpi.focus_();\n    } else if (event.target !== document.documentElement) {\n      // backwards if we're not already focused on <html>\n      document.documentElement.focus();\n    }\n  }\n\n  return false;\n};\n\ndialogPolyfill.DialogManager.prototype.handleKey_ = function(event) {\n  this.forwardTab_ = undefined;\n  if (event.keyCode === 27) {\n    event.preventDefault();\n    event.stopPropagation();\n    var cancelEvent = new supportCustomEvent('cancel', {\n      bubbles: false,\n      cancelable: true\n    });\n    var dpi = this.pendingDialogStack[0];\n    if (dpi && dpi.dialog.dispatchEvent(cancelEvent)) {\n      dpi.dialog.close();\n    }\n  } else if (event.keyCode === 9) {\n    this.forwardTab_ = !event.shiftKey;\n  }\n};\n\n/**\n * Finds and downgrades any known modal dialogs that are no longer displayed. Dialogs that are\n * removed and immediately readded don't stay modal, they become normal.\n *\n * @param {!Array<!HTMLDialogElement>} removed that have definitely been removed\n */\ndialogPolyfill.DialogManager.prototype.checkDOM_ = function(removed) {\n  // This operates on a clone because it may cause it to change. Each change also calls\n  // updateStacking, which only actually needs to happen once. But who removes many modal dialogs\n  // at a time?!\n  var clone = this.pendingDialogStack.slice();\n  clone.forEach(function(dpi) {\n    if (removed.indexOf(dpi.dialog) !== -1) {\n      dpi.downgradeModal();\n    } else {\n      dpi.maybeHideModal();\n    }\n  });\n};\n\n/**\n * @param {!dialogPolyfillInfo} dpi\n * @return {boolean} whether the dialog was allowed\n */\ndialogPolyfill.DialogManager.prototype.pushDialog = function(dpi) {\n  var allowed = (this.zIndexHigh_ - this.zIndexLow_) / 2 - 1;\n  if (this.pendingDialogStack.length >= allowed) {\n    return false;\n  }\n  if (this.pendingDialogStack.unshift(dpi) === 1) {\n    this.blockDocument();\n  }\n  this.updateStacking();\n  return true;\n};\n\n/**\n * @param {!dialogPolyfillInfo} dpi\n */\ndialogPolyfill.DialogManager.prototype.removeDialog = function(dpi) {\n  var index = this.pendingDialogStack.indexOf(dpi);\n  if (index === -1) { return; }\n\n  this.pendingDialogStack.splice(index, 1);\n  if (this.pendingDialogStack.length === 0) {\n    this.unblockDocument();\n  }\n  this.updateStacking();\n};\n\ndialogPolyfill.dm = new dialogPolyfill.DialogManager();\ndialogPolyfill.formSubmitter = null;\ndialogPolyfill.useValue = null;\n\n/**\n * Installs global handlers, such as click listers and native method overrides. These are needed\n * even if a no dialog is registered, as they deal with <form method=\"dialog\">.\n */\nif (window.HTMLDialogElement === undefined) {\n\n  /**\n   * If HTMLFormElement translates method=\"DIALOG\" into 'get', then replace the descriptor with\n   * one that returns the correct value.\n   */\n  var testForm = document.createElement('form');\n  testForm.setAttribute('method', 'dialog');\n  if (testForm.method !== 'dialog') {\n    var methodDescriptor = Object.getOwnPropertyDescriptor(HTMLFormElement.prototype, 'method');\n    if (methodDescriptor) {\n      // nb. Some older iOS and older PhantomJS fail to return the descriptor. Don't do anything\n      // and don't bother to update the element.\n      var realGet = methodDescriptor.get;\n      methodDescriptor.get = function() {\n        if (isFormMethodDialog(this)) {\n          return 'dialog';\n        }\n        return realGet.call(this);\n      };\n      var realSet = methodDescriptor.set;\n      methodDescriptor.set = function(v) {\n        if (typeof v === 'string' && v.toLowerCase() === 'dialog') {\n          return this.setAttribute('method', v);\n        }\n        return realSet.call(this, v);\n      };\n      Object.defineProperty(HTMLFormElement.prototype, 'method', methodDescriptor);\n    }\n  }\n\n  /**\n   * Global 'click' handler, to capture the <input type=\"submit\"> or <button> element which has\n   * submitted a <form method=\"dialog\">. Needed as Safari and others don't report this inside\n   * document.activeElement.\n   */\n  document.addEventListener('click', function(ev) {\n    dialogPolyfill.formSubmitter = null;\n    dialogPolyfill.useValue = null;\n    if (ev.defaultPrevented) { return; }  // e.g. a submit which prevents default submission\n\n    var target = /** @type {Element} */ (ev.target);\n    if (!target || !isFormMethodDialog(target.form)) { return; }\n\n    var valid = (target.type === 'submit' && ['button', 'input'].indexOf(target.localName) > -1);\n    if (!valid) {\n      if (!(target.localName === 'input' && target.type === 'image')) { return; }\n      // this is a <input type=\"image\">, which can submit forms\n      dialogPolyfill.useValue = ev.offsetX + ',' + ev.offsetY;\n    }\n\n    var dialog = findNearestDialog(target);\n    if (!dialog) { return; }\n\n    dialogPolyfill.formSubmitter = target;\n\n  }, false);\n\n  /**\n   * Replace the native HTMLFormElement.submit() method, as it won't fire the\n   * submit event and give us a chance to respond.\n   */\n  var nativeFormSubmit = HTMLFormElement.prototype.submit;\n  var replacementFormSubmit = function () {\n    if (!isFormMethodDialog(this)) {\n      return nativeFormSubmit.call(this);\n    }\n    var dialog = findNearestDialog(this);\n    dialog && dialog.close();\n  };\n  HTMLFormElement.prototype.submit = replacementFormSubmit;\n\n  /**\n   * Global form 'dialog' method handler. Closes a dialog correctly on submit\n   * and possibly sets its return value.\n   */\n  document.addEventListener('submit', function(ev) {\n    var form = /** @type {HTMLFormElement} */ (ev.target);\n    if (!isFormMethodDialog(form)) { return; }\n    ev.preventDefault();\n\n    var dialog = findNearestDialog(form);\n    if (!dialog) { return; }\n\n    // Forms can only be submitted via .submit() or a click (?), but anyway: sanity-check that\n    // the submitter is correct before using its value as .returnValue.\n    var s = dialogPolyfill.formSubmitter;\n    if (s && s.form === form) {\n      dialog.close(dialogPolyfill.useValue || s.value);\n    } else {\n      dialog.close();\n    }\n    dialogPolyfill.formSubmitter = null;\n\n  }, true);\n}\n\nexport default dialogPolyfill;\n","import { h } from \"hyperapp\"\r\nimport dialogPolyfill from \"dialog-polyfill\"\r\n\r\nexport default ({ id, dialogResolved }, children) => (\r\n  <dialog\r\n    id={id}\r\n    oncreate={dialogPolyfill.registerDialog}\r\n    ondialogresolved={async e => {\r\n      const result = dialogResolved ? await dialogResolved(e) : e.detail.result\r\n\r\n      e.detail.executor.resolve(result)\r\n    }}\r\n  >\r\n    <form method=\"dialog\">{children}</form>\r\n  </dialog>\r\n)\r\n","import { h } from \"hyperapp\"\r\nimport Dialog from \"./dialog.js\"\r\n\r\nexport default () => (\r\n  <Dialog\r\n    id=\"import-dialog\"\r\n    dialogResolved={e => {\r\n      const { executor, result: submitEvent } = e.detail\r\n      const form = submitEvent.target\r\n      const file = form.elements[\"file\"].files[0]\r\n\r\n      if (file == null) {\r\n        executor.reject(\"no file selected\")\r\n      } else {\r\n        executor.resolve({ file })\r\n      }\r\n    }}\r\n  >\r\n    <fieldset>\r\n      <legend>Import</legend>\r\n      <p>\r\n        <input name=\"file\" type=\"file\" />\r\n      </p>\r\n      <p>\r\n        <button typep=\"submit\">import</button>\r\n      </p>\r\n    </fieldset>\r\n  </Dialog>\r\n)\r\n","import { h } from \"hyperapp\"\r\nimport Dialog from \"./dialog.js\"\r\n\r\nexport default ({ title }) => (\r\n  <Dialog\r\n    id=\"export-dialog\"\r\n    dialogResolved={e => {\r\n      const { result: submitEvent } = e.detail\r\n      const form = submitEvent.target\r\n      const filename = form.elements[\"filename\"].value + \".kampo.json\"\r\n\r\n      return { filename }\r\n    }}\r\n  >\r\n    <fieldset>\r\n      <legend>Export</legend>\r\n      <p>\r\n        <input type=\"text\" name=\"filename\" value={title} />\r\n      </p>\r\n      <p>\r\n        <button type=\"submit\">download</button>\r\n      </p>\r\n    </fieldset>\r\n  </Dialog>\r\n)\r\n","import { h } from \"hyperapp\"\r\nimport Dialog from \"./dialog.js\"\r\n\r\nexport default ({ title }) => (\r\n  <Dialog\r\n    id=\"save-as-dialog\"\r\n    dialogResolved={e => {\r\n      const { result: submitEvent } = e.detail\r\n      const form = submitEvent.target\r\n      const title = form.elements[\"title\"].value\r\n\r\n      return { title }\r\n    }}\r\n  >\r\n    <fieldset>\r\n      <legend>Save as</legend>\r\n      <p>\r\n        <input name=\"title\" type=\"text\" value={title} />\r\n      </p>\r\n      <p>\r\n        <button type=\"submit\">save</button>\r\n      </p>\r\n    </fieldset>\r\n  </Dialog>\r\n)\r\n","import { h } from \"hyperapp\"\r\nimport Dialog from \"./dialog.js\"\r\n\r\nexport default ({ saveData }) => (\r\n  <Dialog\r\n    id=\"load-dialog\"\r\n    dialogResolved={e => {\r\n      const dialog = e.target\r\n      const title = dialog.returnValue\r\n\r\n      return { title }\r\n    }}\r\n  >\r\n    <fieldset>\r\n      <legend>Load</legend>\r\n      <table class=\"pure-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>title</th>\r\n            <th>last_modified</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {mapHelper(saveData, record => (\r\n            <tr key={record.title}>\r\n              <td>{record.title}</td>\r\n              <td>{record.updatedAt.toLocaleString()}</td>\r\n              <td>\r\n                <button\r\n                  type=\"submit\"\r\n                  name=\"loading-record\"\r\n                  value={record.title}\r\n                >\r\n                  load\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <input type=\"hidden\" />\r\n    </fieldset>\r\n  </Dialog>\r\n)\r\n\r\nfunction mapHelper(array, f) {\r\n  if (array == null || array.length == 0) {\r\n    return null\r\n  } else {\r\n    return array.map(f)\r\n  }\r\n}\r\n","import { h, app } from \"hyperapp\"\n\nimport \"./persist.js\"\nimport { open } from \"./store.js\"\nimport promptSaveAs from \"./prompt-save-as.js\"\n\nimport \"./webcomponents/graph-editor.js\"\nimport \"./webcomponents/graph-node-list.js\"\nimport \"./webcomponents/graph-node.js\"\nimport \"./webcomponents/graph-content-note.js\"\nimport \"./webcomponents/graph-content-pattern.js\"\nimport \"./webcomponents/graph-link-list.js\"\nimport \"./webcomponents/graph-link.js\"\nimport \"./webcomponents/graph-contextmenu-item.js\"\nimport \"./webcomponents/graph-contextmenu.js\"\n\nimport Menu from \"./hyperapp/menu/menu.js\"\n\nimport ImportDialog from \"./hyperapp/dialogs/import-dialog.js\"\nimport ExportDialog from \"./hyperapp/dialogs/export-dialog.js\"\nimport SaveAsDialog from \"./hyperapp/dialogs/save-as-dialog.js\"\nimport LoadDialog from \"./hyperapp/dialogs/load-dialog.js\"\n\nconst view = (s, a) => (\n  <div class=\"content\" key=\"main-view\">\n    <div class=\"editor-container\">\n      <graph-editor\n        id=\"graph-editor\"\n        oncommand={({ detail: { command } }) => a.addCommand(command)}\n      >\n        <graph-node-list slot=\"node-layer\" />\n        <graph-link-list slot=\"link-layer\" />\n      </graph-editor>\n\n      <div style=\"position: absolute; right: 0; bottom: 0;\">\n        <button onclick={() => a.undo()} disabled={s.commands.length == 0}>\n          {\"<\"}\n        </button>\n        <button onclick={() => a.redo()} disabled={s.next.length == 0}>\n          {\">\"}\n        </button>\n      </div>\n    </div>\n\n    <Menu />\n\n    <LoadDialog saveData={s.saveData} />\n    <ImportDialog />\n    <SaveAsDialog title={s.title} />\n    <ExportDialog title={s.title} />\n  </div>\n)\n\nconst state = {\n  commands: [],\n  next: [],\n  db: null,\n  title: null,\n  saveData: null,\n  menuPath: [],\n}\n\nconst actions = {\n  addCommand: c => ({ commands }) => ({\n    commands: [...commands, c],\n    next: [],\n  }),\n\n  redo: () => ({ commands, next }) => {\n    if (next.length == 0) {\n      return\n    }\n\n    const redoStack = [...next]\n    const command = redoStack.pop()\n    command.up()\n    return {\n      commands: [...commands, command],\n      next: redoStack,\n    }\n  },\n\n  undo: () => ({ commands, next }) => {\n    if (commands.length == 0) {\n      return\n    }\n\n    const undoStack = [...commands]\n    const command = undoStack.pop()\n    command.down()\n    return {\n      commands: undoStack,\n      next: [...next, command],\n    }\n  },\n\n  export: ({ name }) => {\n    const json = document.getElementById(\"graph-editor\").serialize()\n    const a = document.createElement(\"a\")\n    a.download = name\n    a.href = URL.createObjectURL(new Blob([json]))\n\n    // for firefox\n    document.body.append(a)\n\n    a.click()\n\n    a.remove()\n  },\n\n  import: ({ json }) => (_state, actions) => {\n    const data = JSON.parse(json)\n    actions.load({ data })\n  },\n\n  load: ({ data }) => (_state, actions) => {\n    const newEditor = document.createElement(data.name)\n    newEditor.init(data.resources)\n\n    const editor = document.getElementById(\"graph-editor\")\n    newEditor.id = editor.id\n    newEditor.addEventListener(\"command\", actions.addCommand)\n    editor.replaceWith(newEditor)\n\n    return { commands: [], next: [] }\n  },\n\n  setDb: ({ db }) => ({ db }),\n\n  setTitle: ({ title }) => ({ title }),\n\n  save: ({ data }) => ({ title, db }) => {\n    const task = (async () => {\n      await db.put(\"saveData\", {\n        title: title || (await promptSaveAs()),\n        data,\n        updatedAt: new Date(),\n      })\n    })()\n    return task\n  },\n\n  saveData: ({ saveData }) => ({ saveData }),\n\n  setMenuPath: ({ menuPath }) => ({ menuPath }),\n\n  closeMenu: () => ({ menuPath: [] }),\n}\n\nconst application = app(state, actions, view, document.body)\n\nopen().then(db => application.setDb({ db }))\n"]}